{"version":3,"sources":["hoc/isAuth.js","components/books/profile-components/profile-info/ProfileInfo.js"],"names":["isAuth","Component","props","useSelector","state","user","token","to","dispatch","useDispatch","navigate","useNavigate","useState","createdLength","setCreatedLength","likedLength","setLikedLength","favouritesLength","setFavouritesLength","isLoading","setIsLoading","file","setFile","url","setUrl","isLoadingAvatar","setIsLoadingAvatar","useEffect","getCreatedBooks","then","x","undefined","length","getLikedBooks","getUserFavourites","getAvatar","localStorage","getItem","catch","style","width","marginTop","Header","username","Body","src","alt","className","variant","onClick","confirm","removeProfile","logout","onSubmit","e","preventDefault","setAvatar","window","location","reload","Group","Label","Control","type","onChange","target","files","show"],"mappings":"0KAGaA,EAAS,SAACC,GAUnB,OARyB,SAACC,GAGtB,OAAsB,OAFTC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAE9BC,MACN,cAACL,EAAD,eAAeC,IACf,cAAC,IAAD,CAAUK,GAAG,c,wKC8FZP,uBA1Ff,WACI,IAAMK,EAAOF,aAAY,SAACC,GAAD,OAAWA,EAAMC,QACpCG,EAAWC,cACXC,EAAWC,cACjB,EAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgDJ,mBAAS,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAwBR,mBAAS,MAAjC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAsBV,mBAAS,IAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACA,EAA8CZ,oBAAS,GAAvD,mBAAOa,EAAP,KAAwBC,EAAxB,KAmDA,OAjDAC,qBAAU,WAsBN,OArBAC,cAAkBC,MAAK,SAAAC,QACTC,IAAND,GACAhB,EAAiBgB,EAAEE,WAG3BC,cAAgBJ,MAAK,SAAAC,QACPC,IAAND,GACAd,EAAec,EAAEE,WAGzBE,cAAoBL,MAAK,SAAAC,QACXC,IAAND,GACAZ,EAAoBY,EAAEE,WAI9BG,YAAUC,aAAaC,QAAQ,aAAaR,MAAK,SAAAC,GAC7CN,EAAOM,MACRQ,OAAM,SAAAR,OAGF,WACHV,GAAa,MAElB,CAACD,EAAWI,IAwBR,qCACH,eAAC,IAAD,CAAMgB,MAAO,CAAEC,MAAO,QAASC,UAAW,MAA1C,UACI,eAAC,IAAKC,OAAN,WACI,8CACA,2CAAcrC,EAAKsC,eAEvB,eAAC,IAAKC,KAAN,WACI,8BACI,iDAAmB,cAAC,IAAD,CAAOC,IAAKtB,EAAKuB,IAAI,YAAYC,UAAU,gBAElE,gDAAmBlC,KACnB,8CAAiBE,KACjB,kDAAqBE,KACrB,cAAC,IAAD,CAAQ+B,QAAQ,SAASC,QAnCd,WACnBC,kBAAQ,6EAA6ErB,MAAK,SAAAC,GAClFA,GACAqB,cAAgBtB,MAAK,SAAAC,GACjBtB,EAAS4C,eACT1C,EAAS,YA8Bb,kCAGR,eAAC,IAAD,CAAM2C,SA3BO,SAACC,GACdA,EAAEC,iBACW,OAATlC,IACAK,GAAmB,GACnB8B,YAAUpB,aAAaC,QAAQ,YAAahB,GAAMQ,MAAK,WACnDH,GAAmB,GACnB+B,OAAOC,SAASC,cAqBxB,UACI,eAAC,IAAKC,MAAN,WACI,cAAC,IAAKC,MAAN,oCACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOC,SAAU,SAAAV,GAAC,OAAIhC,EAAQgC,EAAEW,OAAOC,MAAM,UAEpE,cAAC,IAAD,CAAQH,KAAK,SAASxB,MAAO,CAAEE,UAAW,MAA1C,kCAEJ,cAAC,IAAD,CAAO0B,KAAM1C,EAAb,SACI,cAAC,IAAMmB,KAAP","file":"static/js/25.b2841fec.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isAuth = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.token !== null\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { confirm } from 'react-bootstrap-confirmation'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isAuth } from '../../../../hoc/isAuth'\r\nimport { logout } from '../../../../redux/slices/authSlice'\r\nimport { getCreatedBooks, getLikedBooks, getUserFavourites, removeProfile } from '../../../../services/profile-service'\r\nimport { setAvatar, getAvatar } from '../../../../services/image-service'\r\n\r\nfunction ProfileInfo() {\r\n    const user = useSelector((state) => state.user)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [createdLength, setCreatedLength] = useState(0)\r\n    const [likedLength, setLikedLength] = useState(0)\r\n    const [favouritesLength, setFavouritesLength] = useState(0)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [file, setFile] = useState(null)\r\n    const [url, setUrl] = useState('')\r\n    const [isLoadingAvatar, setIsLoadingAvatar] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getCreatedBooks().then(x => {\r\n            if (x !== undefined) {\r\n                setCreatedLength(x.length)\r\n            }\r\n        })\r\n        getLikedBooks().then(x => {\r\n            if (x !== undefined) {\r\n                setLikedLength(x.length)\r\n            }\r\n        })\r\n        getUserFavourites().then(x => {\r\n            if (x !== undefined) {\r\n                setFavouritesLength(x.length)\r\n            }\r\n        })\r\n\r\n        getAvatar(localStorage.getItem('username')).then(x => {\r\n            setUrl(x)\r\n        }).catch(x => {\r\n        })\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, url])\r\n\r\n    const handleBtnClick = () => {\r\n        confirm('Are you sure you want to remove your profile? The action is irreversible!').then(x => {\r\n            if (x) {\r\n                removeProfile().then(x => {\r\n                    dispatch(logout())\r\n                    navigate('/')\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (file !== null) {\r\n            setIsLoadingAvatar(true)\r\n            setAvatar(localStorage.getItem('username'), file).then(() => {\r\n                setIsLoadingAvatar(false)\r\n                window.location.reload()\r\n            })\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Card style={{ width: \"300px\", marginTop: \"2%\" }}>\r\n            <Card.Header>\r\n                <h1>Profile info</h1>\r\n                <p>Username: {user.username}</p>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <div>\r\n                    <p>Avatar preview: <Image src={url} alt=\"No avatar\" className=\"avatar\"></Image></p>\r\n                </div>\r\n                <p>Created books: {createdLength}</p>\r\n                <p>Liked books: {likedLength}</p>\r\n                <p>Favourite books: {favouritesLength}</p>\r\n                <Button variant=\"danger\" onClick={handleBtnClick}>Remove profile</Button>\r\n            </Card.Body>\r\n        </Card>\r\n        <Form onSubmit={onSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Set Avatar (optional)</Form.Label>\r\n                <Form.Control type=\"file\" onChange={e => setFile(e.target.files[0])}></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" style={{ marginTop: \"2%\" }}>Upload new avatar</Button>\r\n        </Form>\r\n        <Modal show={isLoadingAvatar}>\r\n            <Modal.Body>Avatar is loading...</Modal.Body>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default isAuth(ProfileInfo)"],"sourceRoot":""}