{"version":3,"sources":["services/firebase.js","services/image-service.js","services/books-service.js","services/comments-service.js","services/profile-service.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","uploadImage","bookId","file","a","imageRef","ref","name","uploadBytes","getImageUrl","list","imgList","fullRef","items","getDownloadURL","url","removeImage","deleteObject","editImage","getAvatar","username","setAvatar","avatar","avatarRef","db","getDatabase","dbRef","getAll","get","child","snapshot","val","books","Object","values","sort","b","title","localeCompare","getBook","id","book","_id","create","rating","likes","creator","localStorage","getItem","uniqid","createdOn","Date","now","push","edit","vals","bookKey","set","removeBook","usersSnapshot","usersVals","userKey","undefined","user","indexOf","splice","favourites","removeAllCommentsForBook","remove","getBySeries","allBooks","bookBySeries","filter","x","series","seriesNumber","addToFavourites","users","removeFromFavourites","addRating","value","ratings","then","console","log","like","setUser","dislike","getNewestBooks","result","slice","getMostLikedBooks","length","getBooksByUser","getAllComments","getCommentsByBook","fitlered","comments","map","createComment","content","comment","editComment","newComment","commentsSnapshot","commentKey","removeComment","commentId","getUserFavourites","userId","getCreatedBooks","created","getLikedBooks","liked","includes","setUserPreferences","authors","genres","preferences","getUserPreferences","getRecommendedBooks","recommendedBooks","genre","author","Set","Array","from","removeProfile","usersSnap"],"mappings":"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","file":"static/js/3.593b2316.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBBl57WBHwYa-9WHvsRUv62BQ2XgY41J3I\",\r\n    authDomain: \"books-320707.firebaseapp.com\",\r\n    databaseURL: \"https://books-320707-default-rtdb.firebaseio.com\",\r\n    projectId: \"books-320707\",\r\n    storageBucket: \"books-320707.appspot.com\",\r\n    messagingSenderId: \"814577049102\",\r\n    appId: \"1:814577049102:web:057ae971e150c9dc11665f\",\r\n    measurementId: \"G-5QSKEG5MJ7\"\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nexport default app","import { getStorage, ref, uploadBytes, getDownloadURL, list, deleteObject } from 'firebase/storage'\r\nimport app from './firebase'\r\n\r\nconst storage = getStorage(app)\r\n\r\nexport async function uploadImage(bookId, file) {\r\n    const imageRef = ref(storage, `${bookId}/${file.name}`)\r\n    await uploadBytes(imageRef, file)\r\n}\r\n\r\nexport async function getImageUrl(bookId) {\r\n    const imageRef = ref(storage, `${bookId}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n    const url = await getDownloadURL(fullRef)\r\n    return url\r\n}\r\n\r\nexport async function removeImage(bookId) {\r\n    const imageRef = ref(storage, `${bookId}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n\r\n    await deleteObject(fullRef)\r\n}\r\n\r\nexport async function editImage(bookId, file) {\r\n    await removeImage(bookId)\r\n    await uploadImage(bookId, file)\r\n}\r\n\r\nexport async function getAvatar(username) {\r\n    const imageRef = ref(storage, `${username}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n    if (fullRef) {\r\n        const url = await getDownloadURL(fullRef)\r\n        return url\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nexport async function setAvatar(username, avatar) {\r\n    if (avatar !== null) {\r\n        const imageRef = ref(storage, `${username}/`)\r\n        const avatarRef = ref(storage, `${username}/${avatar.name}`)\r\n        const imgList = await list(imageRef)\r\n        const fullRef = imgList.items[0]\r\n        try {\r\n            await deleteObject(fullRef)\r\n        } catch (e) { }\r\n        await uploadBytes(avatarRef, avatar)\r\n    }\r\n}","import { getDatabase, ref, child, get, push, remove, set } from \"firebase/database\"\r\nimport uniqid from 'uniqid'\r\nimport { removeAllCommentsForBook } from './comments-service'\r\nimport { uploadImage, removeImage, editImage } from './image-service'\r\nimport app from './firebase'\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getAll() {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    if (snapshot.val() !== null) {\r\n        const books = Object.values(snapshot.val()).sort((a, b) => a.title.localeCompare(b.title))\r\n        return books\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getBook(id) {\r\n    const books = await getAll()\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book._id === id) {\r\n                return book\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function create(book, file) {\r\n    book.rating = []\r\n    book.likes = []\r\n    book.creator = localStorage.getItem('username')\r\n    book._id = uniqid()\r\n    book.createdOn = Date.now()\r\n    await uploadImage(book._id, file)\r\n    await push(child(dbRef, '/books'), book)\r\n    return book._id\r\n}\r\n\r\nexport async function edit(id, book, file) {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    for (let bookKey in snapshot.val()) {\r\n        const bookCheck = vals[bookKey]\r\n        if (bookCheck._id === id) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    if (file !== null) {\r\n        await editImage(id, file)\r\n    }\r\n}\r\n\r\nexport async function removeBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    const usersSnapshot = await get(child(dbRef, '/books'))\r\n    const usersVals = usersSnapshot.val()\r\n    for (let userKey in usersVals) {\r\n        const user = usersVals[userKey]\r\n        if (user.likes !== undefined) {\r\n            if (user.likes.indexOf(bookId) !== -1) {\r\n                user.likes.splice(user.likes.indexOf(bookId), 1)\r\n                await set(child(dbRef, `/users/${userKey}`), user)\r\n            }\r\n        }\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            if (user.favourites !== undefined) {\r\n                if (user.favourites.indexOf(bookId) !== -1) {\r\n                    user.favourites.splice(user.likes.indexOf(bookId), 1)\r\n                    await set(child(dbRef, `/users/${userKey}`), user)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    await removeAllCommentsForBook(bookId)\r\n    await removeImage(bookId)\r\n    for (let bookKey in vals) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await remove(child(dbRef, `books/${bookKey}`))\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getBySeries(name) {\r\n    const allBooks = await getAll()\r\n    const bookBySeries = allBooks\r\n        .filter(x => x.series === name)\r\n        .sort((a, b) => a.seriesNumber - b.seriesNumber)\r\n    return bookBySeries\r\n}\r\n\r\nexport async function addToFavourites(bookId) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            if (user.favourites === undefined) {\r\n                user.favourites = []\r\n            }\r\n            user.favourites.push(bookId)\r\n            await set(child(dbRef, '/users/' + userKey), user)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport async function removeFromFavourites(bookId) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            user.favourites = user.favourites.filter(x => x !== bookId)\r\n            await set(child(dbRef, `/users/${userKey}`), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function addRating(bookId, value) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    if (book.ratings === undefined) {\r\n        book.ratings = []\r\n    }\r\n    book.ratings.push({ username: localStorage.getItem('username'), rating: value })\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            set(child(dbRef, `books/${bookKey}`), book).then(() => {\r\n                console.log('hehhehheh')\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport async function like(bookId, setUser) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const users = await get(child(dbRef, '/users'))\r\n    const vals = snapshot.val()\r\n    const usersVals = users.val()\r\n    if (book.likes === undefined) {\r\n        book.likes = []\r\n    }\r\n    book.likes.push(localStorage.getItem('username'))\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    for (let userKey in users.val()) {\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            const user = usersVals[userKey]\r\n            if (user.likes === undefined) {\r\n                user.likes = []\r\n            }\r\n            user.likes.push(bookId)\r\n            setUser(user)\r\n            await set(child(dbRef, `users/${userKey}`), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function dislike(bookId) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    const usersSnapshot = await get(child(dbRef, '/users'))\r\n    const usersVals = usersSnapshot.val()\r\n    book.likes.splice(book.likes.indexOf(localStorage.getItem('username')), 1)\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    for (let userKey in usersVals) {\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            const user = usersVals[userKey]\r\n            if (user.likes !== undefined) {\r\n                if (user.likes.indexOf(bookId) !== -1) {\r\n                    user.likes.splice(user.likes.indexOf(bookId), 1)\r\n                    await set(child(dbRef, `users/${userKey}`), user)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getNewestBooks() {\r\n    const books = await getAll()\r\n    const result = books ? books.sort((a, b) => b.createdOn - a.createdOn).slice(0, 10) : []\r\n\r\n    return result\r\n}\r\n\r\nexport async function getMostLikedBooks() {\r\n    const books = await getAll()\r\n    const result = books\r\n        ? books.filter(x => x.likes).sort((a, b) => a.likes.length - b.likes.length).slice(0, 10)\r\n        : []\r\n\r\n    return result\r\n}\r\n\r\nexport async function getBooksByUser(username) {\r\n    const books = await getAll()\r\n\r\n    return books.filter(x => x.creator === username)\r\n}","import { getDatabase, ref, child, get, push, remove, set } from \"firebase/database\"\r\nimport uniqid from 'uniqid'\r\nimport app from './firebase'\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getAllComments(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    if (snapshot.val() === null) {\r\n        return []\r\n    } else {\r\n        return Object.values(snapshot.val())\r\n    }\r\n}\r\n\r\nexport async function getCommentsByBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    const fitlered = []\r\n    if (snapshot.val() === null) {\r\n        return []\r\n    } else {\r\n        const comments = snapshot.val()\r\n        Object.values(comments).filter(x => x.bookId === bookId).map(x => {\r\n            fitlered.push(x)\r\n            return x\r\n        })\r\n        return fitlered\r\n    }\r\n}\r\n\r\nexport async function createComment({ content }, bookId) {\r\n    const comment = {}\r\n    comment.content = content\r\n    comment.bookId = bookId\r\n    comment.creator = localStorage.getItem('username')\r\n    comment._id = uniqid()\r\n    await push(child(dbRef, '/comments'), comment)\r\n    return await getCommentsByBook(bookId)\r\n}\r\n\r\nexport async function editComment(newComment, id) {\r\n    const commentsSnapshot = await get(child(dbRef, '/comments'))\r\n    const comments = commentsSnapshot.val()\r\n    for (const commentKey in comments) {\r\n        const comment = comments[commentKey]\r\n        if (comment._id === id) {\r\n            comment.content = newComment.content\r\n            await set(child(dbRef, '/comments/' + commentKey), comment)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function removeComment(id) {\r\n    const commentsSnapshot = await get(child(dbRef, '/comments'))\r\n    const comments = commentsSnapshot.val()\r\n    for (const commentKey in comments) {\r\n        const comment = comments[commentKey]\r\n        if (comment._id === id) {\r\n            await remove(child(dbRef, '/comments/' + commentKey))\r\n        }\r\n    }\r\n}\r\n\r\nexport async function removeAllCommentsForBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    if (snapshot.val() === null) {\r\n        return\r\n    } else {\r\n        const comments = snapshot.val()\r\n        for (const commentId in comments) {\r\n            const comment = comments[commentId]\r\n            if (comment.bookId === bookId) {\r\n                await remove(child(dbRef, '/comments/' + commentId))\r\n            }\r\n        }\r\n    }\r\n}","import { getDatabase, ref, child, get, set, remove } from \"firebase/database\"\r\nimport app from './firebase'\r\nimport { getAll, getBook, removeBook, edit } from './books-service'\r\nimport { getAllComments, removeAllCommentsForBook, removeComment } from \"./comments-service\"\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getUserFavourites() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let userId\r\n    let favourites = []\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            userId = userKey\r\n            if (user.favourites) {\r\n                favourites = user.favourites\r\n            }\r\n        }\r\n    }\r\n    for (let id of favourites) {\r\n        const book = await getBook(id)\r\n        if (book === undefined) {\r\n            favourites.splice(favourites.indexOf(id), 1)\r\n        }\r\n        const user = users[userId]\r\n        user.favourites = favourites\r\n        await set(child(dbRef, '/users/' + userId), user)\r\n    }\r\n    return favourites\r\n}\r\n\r\nexport async function getCreatedBooks() {\r\n    const books = await getAll()\r\n    let created = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.creator === localStorage.getItem('username')) {\r\n                created.push(book)\r\n            }\r\n        }\r\n    }\r\n    return created\r\n}\r\n\r\nexport async function getLikedBooks() {\r\n    const books = await getAll()\r\n    let liked = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.likes !== undefined && book.likes.includes(localStorage.getItem('username'))) {\r\n                liked.push(book)\r\n            }\r\n        }\r\n    }\r\n    return liked\r\n}\r\n\r\nexport async function setUserPreferences({ authors, genres }) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            user.preferences = { authors, genres }\r\n            await set(child(dbRef, '/users/' + userKey), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getUserPreferences() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let preferences = {}\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            if (user.preferences) {\r\n                preferences = user.preferences\r\n            } else {\r\n                preferences = { authors: [], genres: [] }\r\n            }\r\n        }\r\n    }\r\n    return preferences\r\n}\r\n\r\nexport async function getRecommendedBooks() {\r\n    const { genres, authors } = await getUserPreferences()\r\n    const allBooks = await getAll()\r\n    const recommendedBooks = []\r\n\r\n    if (allBooks !== null) {\r\n        if (genres && genres.length > 0) {\r\n            for (let genre of genres) {\r\n                const filteredBooks = allBooks.filter(x => x.genres.includes(genre))\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n        if (authors && authors.length > 0) {\r\n            for (let author of authors) {\r\n                const filteredBooks = allBooks.filter(x => x.author === author)\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n    }\r\n    const set = new Set(recommendedBooks)\r\n    return Array.from(set)\r\n}\r\n\r\nexport async function removeProfile() {\r\n    const books = await getAll()\r\n    const usersSnap = await get(dbRef, '/users')\r\n    const users = usersSnap.val()\r\n    const comments = await getAllComments()\r\n    for (const book of books) {\r\n        if (book.creator === localStorage.getItem('username')) {\r\n            await removeBook(book._id)\r\n        }\r\n        if (book.likes && book.likes.includes(localStorage.getItem('username'))) {\r\n            book.likes.splice(book.likes.indexOf(localStorage.getItem('username')), 1)\r\n            await edit(book._id, book)\r\n        }\r\n        await removeAllCommentsForBook(book._id)\r\n    }\r\n\r\n    for (const comment of comments) {\r\n        if (comment.creator === localStorage.getItem('username')) {\r\n            await removeComment(comment._id)\r\n        }\r\n    }\r\n\r\n    for (const userId in users) {\r\n        const user = users[userId]\r\n        if (user._id === localStorage.getItem('token')) {\r\n            await remove(child(dbRef, '/users/' + userId))\r\n        }\r\n    }\r\n\r\n\r\n\r\n}"],"sourceRoot":""}