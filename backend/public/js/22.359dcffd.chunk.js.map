{"version":3,"sources":["validators.js","components/books/details/Details.module.css","components/books/comments/Comments.js","components/books/details/Details.js"],"names":["isEmpty","string","length","undefined","equals","a","b","isLength","isURL","url","test","isEmail","email","module","exports","CommentItem","comment","setComments","bookId","useState","showEdit","setShowEdit","content","creator","localStorage","getItem","Button","variant","onClick","e","confirm","then","x","removeComment","_id","getCommentsByBook","EditForm","form","setForm","errors","setErrors","findFormErrors","newErrors","Form","style","marginTop","onSubmit","preventDefault","Object","keys","editComment","Group","Label","Control","placeholder","defaultValue","onChange","field","value","target","isInvalid","type","Comments","comments","isLoading","setIsLoading","useEffect","className","map","createComment","width","marginLeft","as","Feedback","Details","user","useSelector","state","login","useContext","AuthContext","book","setBook","showDislike","setShowDislike","ratings","setRatings","setUrl","isImgLoading","setIsImgLoading","id","useParams","navigate","useNavigate","getBook","genres","join","likes","includes","username","sum","item","Number","rating","getImageUrl","styles","title","author","to","Image","src","alt","wordBreak","description","year","series","seriesRow","href","buyLink","Favourites","Rating","removeBook","onRemoveBtnClick","like","window","location","reload","onLike","dislike","setRating","addRating","filter","max","min","favourites","setFavourites","getUserFavourites","console","log","removeFromFavourites","addToFavourites"],"mappings":"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","file":"static/js/22.359dcffd.chunk.js","sourcesContent":["export function isEmpty(string) {\r\n    if (string.length === 0 || string === undefined) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function equals(a, b) {\r\n    if (a === b) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isLength(string, length) {\r\n    if (string.length >= length) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isURL(url) {\r\n    const regex = /^(https:|http:|www\\.)\\S*/gm\r\n    return regex.test(url)\r\n}\r\n\r\nexport function isEmail(email) {\r\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/\r\n    return regex.test(email)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey-text\":\"Details_grey-text__2TyhD\"};","import { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { confirm } from 'react-bootstrap-confirmation'\r\nimport { getCommentsByBook, createComment, editComment, removeComment } from '../../../services/comments-service'\r\n\r\nfunction Comments({ bookId }) {\r\n    const [comments, setComments] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [form, setForm] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getCommentsByBook(bookId).then(x => {\r\n                setComments(x)\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, bookId])\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newErrors = findFormErrors()\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n        createComment(form, bookId).then(x => {\r\n            setComments(x)\r\n        })\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n        const newErrors = {}\r\n        const { content } = form\r\n        if (content === undefined && content.length === 0) {\r\n            newErrors.content = 'Content is required!'\r\n        }\r\n        return newErrors\r\n    }\r\n\r\n    return <div className=\"align-items-center\" style={{ marginTop: \"5%\" }}>\r\n        {comments.length > 0\r\n            ? comments.map(x => <CommentItem comment={x} setComments={setComments} bookId={bookId} key={x._id}></CommentItem>)\r\n            : <p>No comments</p>}\r\n        {localStorage.getItem('token')\r\n            ? <Form onSubmit={handleSubmit} style={{ marginTop: \"5%\", width: \"50%\", marginLeft: \"26%\" }}>\r\n                <Form.Group>\r\n                    <Form.Control as=\"textarea\" onChange={e => setField('content', e.target.value)} placeholder=\"Comment\" isInvalid={!!errors.content}></Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.content}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Create comment</Button>\r\n            </Form>\r\n            : null}\r\n    </div>\r\n}\r\n\r\nfunction CommentItem({ comment, setComments, bookId }) {\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const remove = () => {\r\n        confirm('Arey you sure you want to remove the comment?').then(x => {\r\n            if (x) {\r\n                removeComment(comment._id).then(x => {\r\n                    getCommentsByBook(bookId).then(x => {\r\n                        setComments(x)\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return <div>\r\n        <p>{comment.content}</p>\r\n        {comment.creator === localStorage.getItem('username')\r\n            ? <div>\r\n                {!showEdit\r\n                    ? <Button variant=\"warning\" onClick={e => setShowEdit(true)}>Show edit</Button>\r\n                    : <Button variant=\"warning\" onClick={e => setShowEdit(false)}>Hide edit</Button>\r\n                }\r\n                {'  '}\r\n                <Button variant=\"danger\" onClick={remove}>Remove comment</Button>\r\n                {showEdit\r\n                    ? <EditForm comment={comment} setComments={setComments} bookId={bookId} setShowEdit={setShowEdit}></EditForm>\r\n                    : null}\r\n            </div>\r\n            : null}\r\n    </div>\r\n}\r\n\r\nfunction EditForm({ setComments, bookId, comment, setShowEdit }) {\r\n    const [form, setForm] = useState({ content: comment.content })\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newErrors = findFormErrors()\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n        editComment(form, comment._id).then(x => {\r\n            getCommentsByBook(bookId).then(x => {\r\n                setComments(x)\r\n                setShowEdit(false)\r\n            })\r\n        })\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n        const newErrors = {}\r\n        const { content } = form\r\n        if (content === undefined || content.length === 0) {\r\n            newErrors.content = 'Content is required!'\r\n        }\r\n        return newErrors\r\n    }\r\n\r\n    return <Form style={{ marginTop: \"5%\" }} onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n            <Form.Label>Comment content</Form.Label>\r\n            <Form.Control placeholder=\"Content\" defaultValue={comment.content}\r\n                onChange={e => setField('content', e.target.value)}\r\n                isInvalid={!!errors.content}></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Edit comment</Button>\r\n    </Form>\r\n}\r\n\r\nexport default Comments","import { useContext, useEffect, useState } from \"react\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Image from \"react-bootstrap/Image\"\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useParams, useNavigate } from \"react-router\"\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from \"react-redux\"\r\nimport { confirm } from 'react-bootstrap-confirmation'\r\n\r\nimport { getBook, removeBook, like, dislike, addRating, addToFavourites, removeFromFavourites } from \"../../../services/books-service\"\r\nimport { getUserFavourites } from \"../../../services/profile-service\"\r\nimport { getImageUrl } from \"../../../services/image-service\"\r\nimport { isURL } from '../../../validators'\r\nimport AuthContext from '../../../contexts/AuthContext'\r\nimport styles from './Details.module.css'\r\nimport Comments from \"../comments/Comments\"\r\n\r\nexport default function Details() {\r\n    const user = useSelector(state => state.user)\r\n    const { login } = useContext(AuthContext)\r\n    const [book, setBook] = useState({})\r\n    const [showDislike, setShowDislike] = useState(false)\r\n    const [ratings, setRatings] = useState(0)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [url, setUrl] = useState('')\r\n    const [isImgLoading, setIsImgLoading] = useState(true)\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getBook(id).then(x => {\r\n                x.genres = x.genres.join(', ')\r\n                if (x.likes !== undefined && x.likes.includes(user.username)) {\r\n                    setShowDislike(true)\r\n                }\r\n                if (x.ratings !== undefined) {\r\n                    let sum = 0\r\n                    for (let item of x.ratings) {\r\n                        sum += Number(item.rating)\r\n                    }\r\n                    setRatings(sum / x.ratings.length)\r\n\r\n                }\r\n\r\n\r\n                setBook(x)\r\n\r\n                return x\r\n            }).then(x => {\r\n                getImageUrl(x._id).then(url => {\r\n                    setUrl(url)\r\n                    setIsImgLoading(false)\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [id, user, isLoading])\r\n\r\n\r\n    return <div className={`text-center ${styles['grey-text']}`} style={{ marginTop: \"1%\" }}>\r\n        <p>Title: {book.title}</p>\r\n        <p>Author: {book.author}</p>\r\n        <p>Created by <Link to={`/user/${book.creator}`}>{book.creator}</Link></p>\r\n        {isImgLoading\r\n            ? <p>Image is loading ... Please wait</p>\r\n            : <Image src={url} alt=\"No image\" style={{ width: \"40%\" }} />}\r\n        <div>\r\n            <p>Description: </p>\r\n            <p style={{ wordBreak: 'break-all', width: \"50%\", marginLeft: \"25%\" }}>{book.description}</p>\r\n        </div>\r\n        <p>This book is published in {book.year}</p>\r\n        {book.series\r\n            ? <p>This is the {book.seriesRow}th book of the series <Button href={`/series/${book.series}`}>{book.series}</Button></p>\r\n            : null}\r\n        <p>Genres: {book.genres}</p>\r\n        {isURL(book.buyLink)\r\n            ? <p>Buy the book from the link here: <Button href={book.buyLink} target=\"_blank\">{book.buyLink}</Button></p>\r\n            : <p>No buy link</p>\r\n        }\r\n        {book.ratings !== undefined\r\n            ? <p>Average rating: {ratings}</p>\r\n            : null}\r\n        {localStorage.getItem('token')\r\n            ? <Favourites bookId={book._id} />\r\n            : null\r\n        }\r\n        {localStorage.getItem('token')\r\n            ? <Rating book={book} />\r\n            : null\r\n        }\r\n        <br />\r\n        {user.username === book.creator ?\r\n            <div>\r\n                <Button href={`/edit/${book._id}`} variant=\"warning\">Edit book</Button>\r\n                {'  '}\r\n                <Button onClick={e => onRemoveBtnClick(book._id, navigate)} variant=\"danger\">Remove book</Button>\r\n            </div>\r\n            : null\r\n        }\r\n\r\n        {\r\n            book.likes && book.likes.length > 0\r\n                ? <p>This book has {book.likes.length} like{book.likes.length > 1 ? 's' : ''}</p>\r\n                : null\r\n        }\r\n\r\n        {user.username !== book.creator &&\r\n            user.username !== null && showDislike === false ?\r\n            <Button onClick={e => onLike(book._id, login)} style={{ marginTop: \"5%\" }}>Like</Button>\r\n            : null\r\n        }\r\n        {showDislike ?\r\n            <Button onClick={e => onDislike(book._id)}>Dislike</Button>\r\n            : null\r\n        }\r\n        <h4>Comments</h4>\r\n        <Comments bookId={id}></Comments>\r\n    </div>\r\n}\r\n\r\nfunction onRemoveBtnClick(bookId, navigate) {\r\n    confirm('Are you sure you want to remove the book?').then(x => {\r\n        if (x) {\r\n            removeBook(bookId).then(x => {\r\n                navigate('/books/all')\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nfunction onLike(bookId, login) {\r\n    like(bookId, login).then(() => {\r\n        window.location.reload()\r\n    })\r\n}\r\n\r\nfunction onDislike(bookId) {\r\n    confirm('Are you sure you want to dislike the book?').then(x => {\r\n        if (x) {\r\n            dislike(bookId).then(() => {\r\n                window.location.reload()\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nfunction Rating({ book }) {\r\n    const [rating, setRating] = useState(1)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        addRating(book._id, rating).then(() => {\r\n            window.location.reload()\r\n        })\r\n    }\r\n    if (book.ratings !== undefined && book.ratings.filter(x => x.username === localStorage.getItem('username')).length === 0) {\r\n        return <Form onSubmit={onSubmit} style={{ marginTop: \"5%\" }}>\r\n            <Form.Control type=\"number\" max=\"10\" min=\"1\" onChange={e => setRating(e.target.value)}></Form.Control>\r\n            <Button type=\"submit\">Submit rating</Button>\r\n        </Form>\r\n    }\r\n    if (book.ratings === undefined) {\r\n        return <Form onSubmit={onSubmit} style={{ marginTop: \"5%\", width: \"50%\", marginLeft: \"26%\" }}>\r\n            <Form.Control type=\"number\" max=\"10\" min=\"1\" onChange={e => setRating(e.target.value)}></Form.Control>\r\n            <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Submit rating</Button>\r\n        </Form>\r\n    }\r\n    return null\r\n}\r\n\r\nfunction Favourites({ bookId }) {\r\n    const [favourites, setFavourites] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getUserFavourites().then(x => {\r\n                setFavourites(x)\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading])\r\n\r\n    console.log(favourites)\r\n\r\n    const addToFavouritesBtnClick = () => {\r\n        addToFavourites(bookId).then(() => {\r\n            window.location.reload()\r\n        })\r\n    }\r\n    const removeFromFavouritesBtnClick = () => {\r\n        removeFromFavourites(bookId).then(x => {\r\n            window.location.reload()\r\n        })\r\n    }\r\n    if (favourites === [] || !favourites.includes(bookId)) {\r\n        return <Button onClick={addToFavouritesBtnClick}>Add to favourites</Button>\r\n    } else {\r\n        return <Button onClick={removeFromFavouritesBtnClick}>Remove from favourites</Button>\r\n    }\r\n}"],"sourceRoot":""}