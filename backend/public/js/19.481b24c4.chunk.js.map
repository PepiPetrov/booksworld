{"version":3,"sources":["components/books/utils/BookItem.js","components/books/utils/Pagination/Pagination.js","hooks/usePaginate.js","components/books/utils/Pagination/paginate.js","components/util/splitArray.js","hoc/isAuth.js","components/books/profile-components/favourite/FavouriteBooks.js"],"names":["BookItem","book","id","useState","url","setUrl","isLoading","setIsLoading","avatarUrl","setAvatarUrl","useEffect","getImageUrl","then","x","getAvatar","creator","description","length","slice","style","width","marginTop","marginLeft","src","alt","className","Body","Img","Title","title","Text","wordBreak","Link","as","to","_id","color","textDecoration","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","map","page","href","onClick","usePaginate","books","setCurrentPage","paginationData","items","pageNumber","startIndex","take","value","paginate","totalCount","data","getPageData","handlePageChange","splitArray","arr","len","chunks","i","n","push","isAuth","Component","useSelector","state","user","token","favourites","setFavourites","setBooks","isFetch","setIsFetch","getUserFavourites","getBook","splittedData","display","marginRight"],"mappings":"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","file":"static/js/19.481b24c4.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Image from 'react-bootstrap/Image'\r\nimport { Link } from \"react-router-dom\"\r\nimport { getAvatar, getImageUrl } from '../../../services/image-service'\r\n\r\nexport default function BookItem({ book, id }) {\r\n    const [url, setUrl] = useState('')\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [avatarUrl, setAvatarUrl] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getImageUrl(id).then(x => {\r\n                setUrl(x)\r\n            })\r\n            getAvatar(book.creator).then(x => {\r\n                setAvatarUrl(x)\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, id, book.creator])\r\n\r\n\r\n    if (book.description.length > 255) {\r\n        book.description = book.description.slice(0, 256)\r\n        book.description += '...'\r\n    }\r\n    return <Card style={{ width: '90%', marginTop: '3%', marginLeft: \"5%\" }}>\r\n        <Image src={avatarUrl} alt=\"No avatar\" className=\"avatar\" style={{ marginLeft: \"40%\", marginTop: \"5%\" }} />\r\n        <Card.Body>\r\n            <Card.Img src={url} style={{ width: '29%' }} alt=\"No image\" />\r\n            <Card.Title style={{ marginTop: \"1%\" }}>{book.title}</Card.Title>\r\n            <Card.Text style={{ wordBreak: 'break-all' }}>\r\n                {book.description}\r\n            </Card.Text>\r\n            <Card.Link as={Link} to={`/details/${book._id}`} style={{ color: 'grey', textDecoration: 'none' }}>See more</Card.Link>\r\n        </Card.Body>\r\n    </Card>\r\n}","import React from 'react'\r\nimport _ from 'lodash'\r\nimport './pagination.css'\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props\r\n    const pageCount = Math.ceil(itemsCount / pageSize)\r\n    if (pageCount === 1) return null\r\n    const pages = _.range(1, pageCount + 1)\r\n\r\n    return (\r\n        <div className=\"pagination\" style={{ marginTop: \"5%\" }}>\r\n            {pages.map(page => (\r\n                <div href={null} key={page}\r\n                    onClick={() => onPageChange(page)}\r\n                    className={page === currentPage ? 'active' : 'page-item'}>\r\n                    {page}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import { useState } from \"react\"\r\nimport { paginate } from \"../components/books/utils/Pagination/paginate\"\r\n\r\nexport default function usePaginate(books) {\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const pageSize = 6\r\n\r\n    const handlePageChange = page => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const getPageData = () => {\r\n\r\n        const paginationData = paginate(books, currentPage, pageSize)\r\n        return { totalCount: books.length, data: paginationData }\r\n    }\r\n\r\n    const { totalCount, data } = getPageData()\r\n    return { data, totalCount, pageSize, currentPage, handlePageChange }\r\n\r\n}","import _ from 'lodash'\r\n\r\nexport function paginate(items, pageNumber, pageSize){\r\n   const startIndex = (pageNumber - 1) * pageSize\r\n\r\n   return _(items)\r\n            .slice(startIndex)\r\n            .take(pageSize)\r\n            .value()\r\n}","export default function splitArray(arr, len) {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n        chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n}","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isAuth = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.token !== null\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n","import { useState, useEffect } from \"react\"\r\n\r\nimport usePaginate from '../../../../hooks/usePaginate'\r\nimport Pagination from '../../utils/Pagination/Pagination'\r\nimport BookItem from \"../../utils/BookItem\"\r\nimport { getUserFavourites } from \"../../../../services/profile-service\"\r\nimport { getBook } from \"../../../../services/books-service\"\r\nimport { isAuth } from '../../../../hoc/isAuth'\r\nimport splitArray from '../../../util/splitArray'\r\n\r\nfunction FavouriteBooks() {\r\n    const [favourites, setFavourites] = useState([])\r\n    const [books, setBooks] = useState([])\r\n    const [isFetch, setIsFetch] = useState(true)\r\n    const { data, totalCount, pageSize, currentPage, handlePageChange } = usePaginate(books)\r\n\r\n    useEffect(() => {\r\n        if (isFetch) {\r\n            getUserFavourites().then(x => {\r\n                setFavourites(x)\r\n            })\r\n            favourites.map(id => {\r\n                getBook(id).then(x => {\r\n                    setBooks([...books, x])\r\n                })\r\n                return null\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsFetch(false)\r\n        }\r\n    })\r\n\r\n    const splittedData = splitArray(data, 3)\r\n\r\n    return favourites && favourites.length > 0\r\n        ? <>\r\n            <h1>Favoruite books</h1>\r\n            {splittedData.map(x => {\r\n                return <div style={{ display: \"flex\", marginRight: \"3%\" }} key={x}>\r\n                    {x.map(book => {\r\n                        return <BookItem book={book} key={book._id} id={book._id}></BookItem>\r\n                    })\r\n                    }\r\n                </div>\r\n            })}\r\n            <Pagination\r\n                itemsCount={totalCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChange={handlePageChange} />\r\n            page {currentPage} of {Math.ceil(totalCount / pageSize)}\r\n        </>\r\n        : <p>No favourite books</p>\r\n}\r\n\r\nexport default isAuth(FavouriteBooks)"],"sourceRoot":""}