{"version":3,"sources":["services/firebase.js","services/image-service.js","components/books/utils/BookItem.js","components/books/utils/Pagination/Pagination.js","hooks/usePaginate.js","components/books/utils/Pagination/paginate.js","services/books-service.js","services/comments-service.js","components/util/splitArray.js","components/books/catalog-components/newest-books/NewestBooks.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","uploadImage","bookId","file","a","imageRef","ref","name","uploadBytes","getImageUrl","list","imgList","fullRef","items","getDownloadURL","url","removeImage","deleteObject","editImage","getAvatar","username","setAvatar","avatar","avatarRef","BookItem","book","id","useState","setUrl","isLoading","setIsLoading","avatarUrl","setAvatarUrl","useEffect","then","x","creator","description","length","slice","style","width","marginTop","marginLeft","src","alt","className","Body","Img","Title","title","Text","wordBreak","Link","as","to","_id","color","textDecoration","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","map","page","href","onClick","usePaginate","books","setCurrentPage","paginationData","pageNumber","startIndex","take","value","paginate","totalCount","data","getPageData","handlePageChange","db","getDatabase","dbRef","getAll","get","child","snapshot","val","Object","values","sort","b","localeCompare","getBook","create","rating","likes","localStorage","getItem","uniqid","createdOn","Date","now","push","edit","vals","bookKey","set","removeBook","usersSnapshot","usersVals","userKey","undefined","user","indexOf","splice","favourites","removeAllCommentsForBook","remove","getBySeries","allBooks","bookBySeries","filter","series","seriesNumber","addToFavourites","users","removeFromFavourites","addRating","ratings","console","log","like","setUser","dislike","getNewestBooks","result","getMostLikedBooks","getBooksByUser","getAllComments","getCommentsByBook","fitlered","comments","createComment","content","comment","editComment","newComment","commentsSnapshot","commentKey","removeComment","commentId","splitArray","arr","len","chunks","i","n","NewestBooks","newest","setNewest","isFetch","setIsFetch","splittedData","display","marginRight"],"mappings":"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","file":"static/js/14.fe1a6bd6.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBBl57WBHwYa-9WHvsRUv62BQ2XgY41J3I\",\r\n    authDomain: \"books-320707.firebaseapp.com\",\r\n    databaseURL: \"https://books-320707-default-rtdb.firebaseio.com\",\r\n    projectId: \"books-320707\",\r\n    storageBucket: \"books-320707.appspot.com\",\r\n    messagingSenderId: \"814577049102\",\r\n    appId: \"1:814577049102:web:057ae971e150c9dc11665f\",\r\n    measurementId: \"G-5QSKEG5MJ7\"\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nexport default app","import { getStorage, ref, uploadBytes, getDownloadURL, list, deleteObject } from 'firebase/storage'\r\nimport app from './firebase'\r\n\r\nconst storage = getStorage(app)\r\n\r\nexport async function uploadImage(bookId, file) {\r\n    const imageRef = ref(storage, `${bookId}/${file.name}`)\r\n    await uploadBytes(imageRef, file)\r\n}\r\n\r\nexport async function getImageUrl(bookId) {\r\n    const imageRef = ref(storage, `${bookId}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n    const url = await getDownloadURL(fullRef)\r\n    return url\r\n}\r\n\r\nexport async function removeImage(bookId) {\r\n    const imageRef = ref(storage, `${bookId}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n\r\n    await deleteObject(fullRef)\r\n}\r\n\r\nexport async function editImage(bookId, file) {\r\n    await removeImage(bookId)\r\n    await uploadImage(bookId, file)\r\n}\r\n\r\nexport async function getAvatar(username) {\r\n    const imageRef = ref(storage, `${username}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n    if (fullRef) {\r\n        const url = await getDownloadURL(fullRef)\r\n        return url\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nexport async function setAvatar(username, avatar) {\r\n    if (avatar !== null) {\r\n        const imageRef = ref(storage, `${username}/`)\r\n        const avatarRef = ref(storage, `${username}/${avatar.name}`)\r\n        const imgList = await list(imageRef)\r\n        const fullRef = imgList.items[0]\r\n        try {\r\n            await deleteObject(fullRef)\r\n        } catch (e) { }\r\n        await uploadBytes(avatarRef, avatar)\r\n    }\r\n}","import { useEffect, useState } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Image from 'react-bootstrap/Image'\r\nimport { Link } from \"react-router-dom\"\r\nimport { getAvatar, getImageUrl } from '../../../services/image-service'\r\n\r\nexport default function BookItem({ book, id }) {\r\n    const [url, setUrl] = useState('')\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [avatarUrl, setAvatarUrl] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getImageUrl(id).then(x => {\r\n                setUrl(x)\r\n            })\r\n            getAvatar(book.creator).then(x => {\r\n                setAvatarUrl(x)\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, id, book.creator])\r\n\r\n\r\n    if (book.description.length > 255) {\r\n        book.description = book.description.slice(0, 256)\r\n        book.description += '...'\r\n    }\r\n    return <Card style={{ width: '90%', marginTop: '3%', marginLeft: \"5%\" }}>\r\n        <Image src={avatarUrl} alt=\"No avatar\" className=\"avatar\" style={{ marginLeft: \"40%\", marginTop: \"5%\" }} />\r\n        <Card.Body>\r\n            <Card.Img src={url} style={{ width: '29%' }} alt=\"No image\" />\r\n            <Card.Title style={{ marginTop: \"1%\" }}>{book.title}</Card.Title>\r\n            <Card.Text style={{ wordBreak: 'break-all' }}>\r\n                {book.description}\r\n            </Card.Text>\r\n            <Card.Link as={Link} to={`/details/${book._id}`} style={{ color: 'grey', textDecoration: 'none' }}>See more</Card.Link>\r\n        </Card.Body>\r\n    </Card>\r\n}","import React from 'react'\r\nimport _ from 'lodash'\r\nimport './pagination.css'\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props\r\n    const pageCount = Math.ceil(itemsCount / pageSize)\r\n    if (pageCount === 1) return null\r\n    const pages = _.range(1, pageCount + 1)\r\n\r\n    return (\r\n        <div className=\"pagination\" style={{ marginTop: \"5%\" }}>\r\n            {pages.map(page => (\r\n                <div href={null} key={page}\r\n                    onClick={() => onPageChange(page)}\r\n                    className={page === currentPage ? 'active' : 'page-item'}>\r\n                    {page}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import { useState } from \"react\"\r\nimport { paginate } from \"../components/books/utils/Pagination/paginate\"\r\n\r\nexport default function usePaginate(books) {\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const pageSize = 6\r\n\r\n    const handlePageChange = page => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const getPageData = () => {\r\n\r\n        const paginationData = paginate(books, currentPage, pageSize)\r\n        return { totalCount: books.length, data: paginationData }\r\n    }\r\n\r\n    const { totalCount, data } = getPageData()\r\n    return { data, totalCount, pageSize, currentPage, handlePageChange }\r\n\r\n}","import _ from 'lodash'\r\n\r\nexport function paginate(items, pageNumber, pageSize){\r\n   const startIndex = (pageNumber - 1) * pageSize\r\n\r\n   return _(items)\r\n            .slice(startIndex)\r\n            .take(pageSize)\r\n            .value()\r\n}","import { getDatabase, ref, child, get, push, remove, set } from \"firebase/database\"\r\nimport uniqid from 'uniqid'\r\nimport { removeAllCommentsForBook } from './comments-service'\r\nimport { uploadImage, removeImage, editImage } from './image-service'\r\nimport app from './firebase'\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getAll() {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    if (snapshot.val() !== null) {\r\n        const books = Object.values(snapshot.val()).sort((a, b) => a.title.localeCompare(b.title))\r\n        return books\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getBook(id) {\r\n    const books = await getAll()\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book._id === id) {\r\n                return book\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function create(book, file) {\r\n    book.rating = []\r\n    book.likes = []\r\n    book.creator = localStorage.getItem('username')\r\n    book._id = uniqid()\r\n    book.createdOn = Date.now()\r\n    await uploadImage(book._id, file)\r\n    await push(child(dbRef, '/books'), book)\r\n    return book._id\r\n}\r\n\r\nexport async function edit(id, book, file) {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    for (let bookKey in snapshot.val()) {\r\n        const bookCheck = vals[bookKey]\r\n        if (bookCheck._id === id) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    if (file !== null) {\r\n        await editImage(id, file)\r\n    }\r\n}\r\n\r\nexport async function removeBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    const usersSnapshot = await get(child(dbRef, '/books'))\r\n    const usersVals = usersSnapshot.val()\r\n    for (let userKey in usersVals) {\r\n        const user = usersVals[userKey]\r\n        if (user.likes !== undefined) {\r\n            if (user.likes.indexOf(bookId) !== -1) {\r\n                user.likes.splice(user.likes.indexOf(bookId), 1)\r\n                await set(child(dbRef, `/users/${userKey}`), user)\r\n            }\r\n        }\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            if (user.favourites !== undefined) {\r\n                if (user.favourites.indexOf(bookId) !== -1) {\r\n                    user.favourites.splice(user.likes.indexOf(bookId), 1)\r\n                    await set(child(dbRef, `/users/${userKey}`), user)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    await removeAllCommentsForBook(bookId)\r\n    await removeImage(bookId)\r\n    for (let bookKey in vals) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await remove(child(dbRef, `books/${bookKey}`))\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getBySeries(name) {\r\n    const allBooks = await getAll()\r\n    const bookBySeries = allBooks\r\n        .filter(x => x.series === name)\r\n        .sort((a, b) => a.seriesNumber - b.seriesNumber)\r\n    return bookBySeries\r\n}\r\n\r\nexport async function addToFavourites(bookId) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            if (user.favourites === undefined) {\r\n                user.favourites = []\r\n            }\r\n            user.favourites.push(bookId)\r\n            await set(child(dbRef, '/users/' + userKey), user)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport async function removeFromFavourites(bookId) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            user.favourites = user.favourites.filter(x => x !== bookId)\r\n            await set(child(dbRef, `/users/${userKey}`), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function addRating(bookId, value) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    if (book.ratings === undefined) {\r\n        book.ratings = []\r\n    }\r\n    book.ratings.push({ username: localStorage.getItem('username'), rating: value })\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            set(child(dbRef, `books/${bookKey}`), book).then(() => {\r\n                console.log('hehhehheh')\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport async function like(bookId, setUser) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const users = await get(child(dbRef, '/users'))\r\n    const vals = snapshot.val()\r\n    const usersVals = users.val()\r\n    if (book.likes === undefined) {\r\n        book.likes = []\r\n    }\r\n    book.likes.push(localStorage.getItem('username'))\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    for (let userKey in users.val()) {\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            const user = usersVals[userKey]\r\n            if (user.likes === undefined) {\r\n                user.likes = []\r\n            }\r\n            user.likes.push(bookId)\r\n            setUser(user)\r\n            await set(child(dbRef, `users/${userKey}`), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function dislike(bookId) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    const usersSnapshot = await get(child(dbRef, '/users'))\r\n    const usersVals = usersSnapshot.val()\r\n    book.likes.splice(book.likes.indexOf(localStorage.getItem('username')), 1)\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    for (let userKey in usersVals) {\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            const user = usersVals[userKey]\r\n            if (user.likes !== undefined) {\r\n                if (user.likes.indexOf(bookId) !== -1) {\r\n                    user.likes.splice(user.likes.indexOf(bookId), 1)\r\n                    await set(child(dbRef, `users/${userKey}`), user)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getNewestBooks() {\r\n    const books = await getAll()\r\n    const result = books ? books.sort((a, b) => b.createdOn - a.createdOn).slice(0, 10) : []\r\n\r\n    return result\r\n}\r\n\r\nexport async function getMostLikedBooks() {\r\n    const books = await getAll()\r\n    const result = books\r\n        ? books.filter(x => x.likes).sort((a, b) => a.likes.length - b.likes.length).slice(0, 10)\r\n        : []\r\n\r\n    return result\r\n}\r\n\r\nexport async function getBooksByUser(username) {\r\n    const books = await getAll()\r\n\r\n    return books.filter(x => x.creator === username)\r\n}","import { getDatabase, ref, child, get, push, remove, set } from \"firebase/database\"\r\nimport uniqid from 'uniqid'\r\nimport app from './firebase'\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getAllComments(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    if (snapshot.val() === null) {\r\n        return []\r\n    } else {\r\n        return Object.values(snapshot.val())\r\n    }\r\n}\r\n\r\nexport async function getCommentsByBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    const fitlered = []\r\n    if (snapshot.val() === null) {\r\n        return []\r\n    } else {\r\n        const comments = snapshot.val()\r\n        Object.values(comments).filter(x => x.bookId === bookId).map(x => {\r\n            fitlered.push(x)\r\n            return x\r\n        })\r\n        return fitlered\r\n    }\r\n}\r\n\r\nexport async function createComment({ content }, bookId) {\r\n    const comment = {}\r\n    comment.content = content\r\n    comment.bookId = bookId\r\n    comment.creator = localStorage.getItem('username')\r\n    comment._id = uniqid()\r\n    await push(child(dbRef, '/comments'), comment)\r\n    return await getCommentsByBook(bookId)\r\n}\r\n\r\nexport async function editComment(newComment, id) {\r\n    const commentsSnapshot = await get(child(dbRef, '/comments'))\r\n    const comments = commentsSnapshot.val()\r\n    for (const commentKey in comments) {\r\n        const comment = comments[commentKey]\r\n        if (comment._id === id) {\r\n            comment.content = newComment.content\r\n            await set(child(dbRef, '/comments/' + commentKey), comment)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function removeComment(id) {\r\n    const commentsSnapshot = await get(child(dbRef, '/comments'))\r\n    const comments = commentsSnapshot.val()\r\n    for (const commentKey in comments) {\r\n        const comment = comments[commentKey]\r\n        if (comment._id === id) {\r\n            await remove(child(dbRef, '/comments/' + commentKey))\r\n        }\r\n    }\r\n}\r\n\r\nexport async function removeAllCommentsForBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    if (snapshot.val() === null) {\r\n        return\r\n    } else {\r\n        const comments = snapshot.val()\r\n        for (const commentId in comments) {\r\n            const comment = comments[commentId]\r\n            if (comment.bookId === bookId) {\r\n                await remove(child(dbRef, '/comments/' + commentId))\r\n            }\r\n        }\r\n    }\r\n}","export default function splitArray(arr, len) {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n        chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nimport usePaginate from \"../../../../hooks/usePaginate\"\r\nimport Pagination from \"../../utils/Pagination/Pagination\"\r\nimport BookItem from \"../../utils/BookItem\"\r\nimport { getNewestBooks } from '../../../../services/books-service'\r\nimport splitArray from \"../../../util/splitArray\"\r\n\r\nexport default function NewestBooks() {\r\n    const [newest, setNewest] = useState([])\r\n    const [isFetch, setIsFetch] = useState(true)\r\n\r\n    const { data, totalCount, pageSize, currentPage, handlePageChange } = usePaginate(newest ? newest : [])\r\n    useEffect(() => {\r\n        if (isFetch) {\r\n            getNewestBooks().then(x => {\r\n                setNewest(x)\r\n            })\r\n        }\r\n        return () => {\r\n            setIsFetch(false)\r\n        }\r\n    })\r\n\r\n    const splittedData = splitArray(data, 3)\r\n\r\n    return newest && newest.length > 0\r\n        ? <>\r\n            <h1>Newest books</h1>\r\n            {splittedData.map(x => {\r\n                return <div style={{ display: \"flex\", marginRight: \"3%\" }} key={x}>\r\n                    {x.map(book => {\r\n                        return <BookItem book={book} key={book._id} id={book._id}></BookItem>\r\n                    })\r\n                    }\r\n                </div>\r\n            })}\r\n            <Pagination\r\n                itemsCount={totalCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChange={handlePageChange} />\r\n            page {currentPage} of {Math.ceil(totalCount / pageSize)}\r\n        </>\r\n        : <p>No books</p>\r\n}"],"sourceRoot":""}