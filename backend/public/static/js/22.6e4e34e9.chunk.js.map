{"version":3,"sources":["hoc/isAuth.js","services/profile-service.js","components/books/recommended/RecommendedBooks.js"],"names":["isAuth","Component","props","useSelector","state","user","token","to","db","getDatabase","app","dbRef","ref","getUserFavourites","a","get","child","userKey","snapshot","users","val","favourites","_id","localStorage","getItem","userId","id","getBook","undefined","splice","indexOf","set","getCreatedBooks","getAll","books","created","book","creator","push","getLikedBooks","liked","likes","includes","setUserPreferences","authors","genres","preferences","getUserPreferences","getRecommendedBooks","allBooks","recommendedBooks","length","genre","filter","x","map","author","Set","Array","from","removeProfile","usersSnap","getAllComments","comments","removeBook","edit","removeAllCommentsForBook","comment","removeComment","remove","useState","isLoading","setIsLoading","setBooks","useEffect","then"],"mappings":"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","file":"static/js/22.6e4e34e9.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isAuth = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.token !== null\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n","import { getDatabase, ref, child, get, set, remove } from \"firebase/database\"\r\nimport app from './firebase'\r\nimport { getAll, getBook, removeBook, edit } from './books-service'\r\nimport { getAllComments, removeAllCommentsForBook, removeComment } from \"./comments-service\"\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getUserFavourites() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let userId\r\n    let favourites = []\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            userId = userKey\r\n            if (user.favourites) {\r\n                favourites = user.favourites\r\n            }\r\n        }\r\n    }\r\n    for (let id of favourites) {\r\n        const book = await getBook(id)\r\n        if (book === undefined) {\r\n            favourites.splice(favourites.indexOf(id), 1)\r\n        }\r\n        const user = users[userId]\r\n        user.favourites = favourites\r\n        await set(child(dbRef, '/users/' + userId), user)\r\n    }\r\n    return favourites\r\n}\r\n\r\nexport async function getCreatedBooks() {\r\n    const books = await getAll()\r\n    let created = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.creator === localStorage.getItem('username')) {\r\n                created.push(book)\r\n            }\r\n        }\r\n    }\r\n    return created\r\n}\r\n\r\nexport async function getLikedBooks() {\r\n    const books = await getAll()\r\n    let liked = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.likes !== undefined && book.likes.includes(localStorage.getItem('username'))) {\r\n                liked.push(book)\r\n            }\r\n        }\r\n    }\r\n    return liked\r\n}\r\n\r\nexport async function setUserPreferences({ authors, genres }) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            user.preferences = { authors, genres }\r\n            await set(child(dbRef, '/users/' + userKey), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getUserPreferences() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let preferences = {}\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            if (user.preferences) {\r\n                preferences = user.preferences\r\n            } else {\r\n                preferences = { authors: [], genres: [] }\r\n            }\r\n        }\r\n    }\r\n    return preferences\r\n}\r\n\r\nexport async function getRecommendedBooks() {\r\n    const { genres, authors } = await getUserPreferences()\r\n    const allBooks = await getAll()\r\n    const recommendedBooks = []\r\n\r\n    if (allBooks !== null) {\r\n        if (genres && genres.length > 0) {\r\n            for (let genre of genres) {\r\n                const filteredBooks = allBooks.filter(x => x.genres.includes(genre))\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n        if (authors && authors.length > 0) {\r\n            for (let author of authors) {\r\n                const filteredBooks = allBooks.filter(x => x.author === author)\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n    }\r\n    const set = new Set(recommendedBooks)\r\n    return Array.from(set)\r\n}\r\n\r\nexport async function removeProfile() {\r\n    const books = await getAll()\r\n    const usersSnap = await get(dbRef, '/users')\r\n    const users = usersSnap.val()\r\n    const comments = await getAllComments()\r\n    for (const book of books) {\r\n        if (book.creator === localStorage.getItem('username')) {\r\n            await removeBook(book._id)\r\n        }\r\n        if (book.likes && book.likes.includes(localStorage.getItem('username'))) {\r\n            book.likes.splice(book.likes.indexOf(localStorage.getItem('username')), 1)\r\n            await edit(book._id, book)\r\n        }\r\n        await removeAllCommentsForBook(book._id)\r\n    }\r\n\r\n    for (const comment of comments) {\r\n        if (comment.creator === localStorage.getItem('username')) {\r\n            await removeComment(comment._id)\r\n        }\r\n    }\r\n\r\n    for (const userId in users) {\r\n        const user = users[userId]\r\n        if (user._id === localStorage.getItem('token')) {\r\n            await remove(child(dbRef, '/users/' + userId))\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nimport BooksList from '../utils/BooksList/BooksList'\r\nimport { getRecommendedBooks } from \"../../../services/profile-service\"\r\nimport { isAuth } from '../../../hoc/isAuth'\r\n\r\nfunction RecommendedBooks() {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [books, setBooks] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getRecommendedBooks().then(x => {\r\n                setBooks(x || [])\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading])\r\n\r\n    return books && books.length > 0\r\n        ? <>\r\n            <h1>Recommended books</h1>\r\n            <BooksList books={books} />\r\n\r\n        </>\r\n        : <p>No books</p>\r\n}\r\n\r\n\r\nexport default isAuth(RecommendedBooks)"],"sourceRoot":""}