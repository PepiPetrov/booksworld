{"version":3,"sources":["components/books/catalog-components/newest-books/NewestBooks.js"],"names":["NewestBooks","useState","newest","setNewest","isFetch","setIsFetch","useEffect","getNewestBooks","then","x","length","books"],"mappings":"iMAKe,SAASA,IACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,qBAAU,WAMN,OALIF,GACAG,cAAiBC,MAAK,SAAAC,GAClBN,EAAUM,MAGX,WACHJ,GAAW,OAIZH,GAAUA,EAAOQ,OAAS,EAC3B,qCACE,8CACA,cAAC,IAAD,CAAWC,MAAOT,OAGpB","file":"static/js/28.1afbf329.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nimport BooksList from '../../utils/BooksList/BooksList'\r\nimport { getNewestBooks } from '../../../../services/books-service'\r\n\r\nexport default function NewestBooks() {\r\n    const [newest, setNewest] = useState([])\r\n    const [isFetch, setIsFetch] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (isFetch) {\r\n            getNewestBooks().then(x => {\r\n                setNewest(x)\r\n            })\r\n        }\r\n        return () => {\r\n            setIsFetch(false)\r\n        }\r\n    })\r\n\r\n    return newest && newest.length > 0\r\n        ? <>\r\n            <h1>Newest books</h1>\r\n            <BooksList books={newest} />\r\n\r\n        </>\r\n        : <p>No books</p>\r\n}"],"sourceRoot":""}