{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../../../../src/utils/selectors.tsx","../../../../src/utils/functions.tsx","../../../../src/components/ContentEditable.tsx","../../../../src/components/Tag.tsx","../../../src/index.tsx"],"names":["FormContext","React","FormGroup","ref","controlId","as","Component","props","context","useMemo","_jsx","Provider","value","children","displayName","FormCheckLabel","bsPrefix","className","htmlFor","useContext","useBootstrapPrefix","classNames","FormCheck","id","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","title","type","label","innerFormContext","hasLabel","input","FormCheckInput","_jsxs","_Fragment","Feedback","tooltip","Object","assign","Input","Label","propTypes","PropTypes","string","bool","elementType","FormRange","Switch","_ref","any","validated","Form","Group","Control","FormControl","Floating","FormFloating","Check","FormLabel","Text","FormText","Range","Select","FormSelect","FloatingLabel","DEVICE_SIZES","useCol","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","Col","colProps","length","size","htmlSize","plaintext","readOnly","createWithBsPrefix","column","visuallyHidden","columnClass","defaultProps","muted","classSelectors","htmlEntityMap","safeHtmlString","String","replace","s","escapeHtml","removeLineBreaks","focused","removed","preFocusedValue","onPaste","e","preventDefault","text","clipboardData","getData","document","execCommand","onFocus","getValue","onBlur","innerEditableRef","current","validator","change","innerText","remove","onKeyDown","keyCode","focusInputRef","removeOnBackspace","getRef","inputRef","focus","componentDidMount","this","render","contentEditable","dangerouslySetInnerHTML","__html","createRef","index","editable","update","tagRemoveClass","newValue","onClick","state","onInputChange","setState","target","onInputKeyDown","undefined","addTag","removeTag","tags","onChange","i","splice","updateTag","placeholder","maxTags","maxTagsReached","isEditable","showInput","map","tag","key"],"mappings":"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","file":"static/js/12.b80f09b3.chunk.js","sourcesContent":["import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\nexport const classSelectors = {\n  wrapper: \"react-tag-input\",\n  input: \"react-tag-input__input\",\n  tag: \"react-tag-input__tag\",\n  tagContent: \"react-tag-input__tag__content\",\n  tagRemove: \"react-tag-input__tag__remove\",\n  tagRemoveReadOnly: \"react-tag-input__tag__remove-readonly\",\n};\n","\nexport function removeLineBreaks(value: string) {\n  return value.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n}\n\n// TAKEN FROM - https://github.com/janl/mustache.js/blob/master/mustache.js#L55\nconst htmlEntityMap = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\",\n  \"/\": \"&#x2F;\",\n  \"`\": \"&#x60;\",\n  \"=\": \"&#x3D;\",\n};\nexport function escapeHtml(value: string) {\n  return String(value).replace(/[&<>\"'`=\\/]/g, (s) => {\n    // @ts-ignore\n    return htmlEntityMap[s];\n  });\n}\n\nexport function safeHtmlString(value: string) {\n  return escapeHtml(removeLineBreaks(value));\n}\n","import React from \"react\";\nimport {safeHtmlString} from \"../utils/functions\";\n\ninterface Props {\n  value: string;\n  className: string;\n  innerEditableRef: React.RefObject<HTMLDivElement>;\n  inputRef: React.RefObject<HTMLInputElement>;\n  change: (value: string) => void;\n  remove: () => void;\n  validator?: (value: string) => boolean;\n  removeOnBackspace?: boolean;\n}\n\nexport class ContentEditable extends React.Component<Props> {\n\n  // Track focus state of editable tag\n  focused: boolean = false;\n\n  // Track if element has been removed from DOM\n  removed: boolean = false;\n\n  // Save value before input is focused / user starts typing\n  preFocusedValue: string = \"\";\n\n  componentDidMount() {\n    this.preFocusedValue = this.getValue();\n  }\n\n  onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\n\n    // Cancel paste event\n    e.preventDefault();\n\n    // Remove formatting from clipboard contents\n    const text = e.clipboardData.getData(\"text/plain\");\n\n    // Insert text manually from paste command\n    document.execCommand(\"insertHTML\", false, safeHtmlString(text));\n\n  }\n\n  onFocus = () => {\n    this.preFocusedValue = this.getValue();\n    this.focused = true;\n  }\n\n  onBlur = () => {\n\n    this.focused = false;\n\n    const ref = this.props.innerEditableRef.current;\n    const { validator, change } = this.props;\n\n    if (!this.removed && ref) {\n\n      // On blur, if no content in tag, remove it\n      if (ref.innerText === \"\") {\n        this.props.remove();\n        return;\n      }\n\n      // Validate input if needed\n      if (validator) {\n        const valid = validator(this.getValue());\n        // If invalidate, switch ref back to pre focused value\n        if (!valid) {\n          ref.innerText = this.preFocusedValue;\n          return;\n        }\n      }\n\n      change(ref.innerText);\n\n    }\n\n  }\n\n  onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n\n    // On enter, focus main tag input\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.focusInputRef();\n      return;\n    }\n\n    // On backspace, if no content in ref, remove tag and focus main tag input\n    const { removeOnBackspace } = this.props;\n    const value = this.getValue();\n    if (removeOnBackspace && e.keyCode === 8 && value === \"\") {\n      this.removed = true;\n      this.props.remove();\n      this.focusInputRef();\n      return;\n    }\n\n  }\n\n  getValue = () => {\n    const ref = this.getRef();\n    return ref ? ref.innerText : \"\";\n  }\n\n  getRef = () => {\n    return this.props.innerEditableRef.current;\n  }\n\n  focusInputRef = () => {\n    const { inputRef } = this.props;\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }\n\n  render() {\n    const { value, className, innerEditableRef } = this.props;\n    return (\n      <div\n        ref={innerEditableRef}\n        className={className}\n        contentEditable={true}\n        onPaste={this.onPaste}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onKeyDown={this.onKeyDown}\n        dangerouslySetInnerHTML={{ __html: safeHtmlString(value) }}\n      />\n    );\n  }\n\n}\n","import React from \"react\";\nimport {classSelectors} from \"../utils/selectors\";\nimport {ContentEditable} from \"./ContentEditable\";\n\ninterface Props {\n  value: string;\n  index: number;\n  editable: boolean;\n  readOnly: boolean;\n  inputRef: React.RefObject<HTMLInputElement>;\n  update: (i: number, value: string) => void;\n  remove: (i: number) => void;\n  validator?: (val: string) => boolean;\n  removeOnBackspace?: boolean;\n}\n\nexport class Tag extends React.Component<Props> {\n\n  innerEditableRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  remove = () => this.props.remove(this.props.index);\n\n  render() {\n\n    const { value, index, editable, inputRef, validator, update, readOnly, removeOnBackspace } = this.props;\n\n    const tagRemoveClass = !readOnly ?\n      classSelectors.tagRemove : `${classSelectors.tagRemove} ${classSelectors.tagRemoveReadOnly}`;\n\n    return (\n      <div className={classSelectors.tag}>\n        {!editable && <div className={classSelectors.tagContent}>{value}</div>}\n        {editable && (\n          <ContentEditable\n            value={value}\n            inputRef={inputRef}\n            innerEditableRef={this.innerEditableRef}\n            className={classSelectors.tagContent}\n            change={(newValue) => update(index, newValue)}\n            remove={this.remove}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        )}\n        <div className={tagRemoveClass} onClick={this.remove}/>\n      </div>\n    );\n\n  }\n\n}\n","import React from \"react\";\nimport {Tag} from \"./components/Tag\";\nimport {classSelectors} from \"./utils/selectors\";\n\ntype Tags = string[];\n\nexport interface ReactTagInputProps {\n  tags: Tags;\n  onChange: (tags: Tags) => void;\n  placeholder?: string;\n  maxTags?: number;\n  validator?: (val: string) => boolean;\n  editable?: boolean;\n  readOnly?: boolean;\n  removeOnBackspace?: boolean;\n}\n\ninterface State {\n  input: string;\n}\n\nexport default class ReactTagInput extends React.Component<ReactTagInputProps, State> {\n\n  state = { input: \"\" };\n\n  // Ref for input element\n  inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n  onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ input: e.target.value });\n  }\n\n  onInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n\n    const { input } = this.state;\n    const { validator, removeOnBackspace } = this.props;\n\n    // On enter\n    if (e.keyCode === 13) {\n\n      // Prevent form submission if tag input is nested in <form>\n      e.preventDefault();\n\n      // If input is blank, do nothing\n      if (input === \"\") { return; }\n\n      // Check if input is valid\n      const valid = validator !== undefined ? validator(input) : true;\n      if (!valid) {\n        return;\n      }\n\n      // Add input to tag list\n      this.addTag(input);\n\n    }\n    // On backspace or delete\n    else if (removeOnBackspace && (e.keyCode === 8 || e.keyCode === 46)) {\n\n      // If currently typing, do nothing\n      if (input !== \"\") {\n        return;\n      }\n\n      // If input is blank, remove previous tag\n      this.removeTag(this.props.tags.length - 1);\n\n    }\n\n  }\n\n  addTag = (value: string) => {\n    const tags = [ ...this.props.tags ];\n    tags.push(value);\n    this.props.onChange(tags);\n    this.setState({ input: \"\" });\n  }\n\n  removeTag = (i: number) => {\n    const tags = [ ...this.props.tags ];\n    tags.splice(i, 1);\n    this.props.onChange(tags);\n  }\n\n  updateTag = (i: number, value: string) => {\n    const tags = [...this.props.tags];\n    tags[i] = value;\n    this.props.onChange(tags);\n  }\n\n  render() {\n\n    const { input } = this.state;\n\n    const { tags, placeholder, maxTags, editable, readOnly, validator, removeOnBackspace } = this.props;\n\n    const maxTagsReached = maxTags !== undefined ? tags.length >= maxTags : false;\n\n    const isEditable = readOnly ? false : (editable || false);\n\n    const showInput = !readOnly && !maxTagsReached;\n\n    return (\n      <div className={classSelectors.wrapper}>\n        {tags.map((tag, i) => (\n          <Tag\n            key={i}\n            value={tag}\n            index={i}\n            editable={isEditable}\n            readOnly={readOnly || false}\n            inputRef={this.inputRef}\n            update={this.updateTag}\n            remove={this.removeTag}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        ))}\n        {showInput &&\n          <input\n            ref={this.inputRef}\n            value={input}\n            className={classSelectors.input}\n            placeholder={placeholder || \"Type and press enter\"}\n            onChange={this.onInputChange}\n            onKeyDown={this.onInputKeyDown}\n          />\n        }\n      </div>\n    );\n\n  }\n\n}\n"],"sourceRoot":""}