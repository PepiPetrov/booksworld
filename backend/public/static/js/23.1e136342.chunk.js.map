{"version":3,"sources":["hoc/isAuth.js","validators.js","../../../../src/utils/selectors.tsx","../../../../src/utils/functions.tsx","../../../../src/components/ContentEditable.tsx","../../../../src/components/Tag.tsx","../../../src/index.tsx","contexts/TagsContext.js","components/books/utils/TagsInputMobile.js","hooks/useIsMobile.js","components/books/create/Create.js"],"names":["isAuth","Component","props","useSelector","state","user","token","to","isEmpty","string","length","undefined","equals","a","b","isLength","isURL","url","test","isEmail","email","classSelectors","htmlEntityMap","safeHtmlString","value","String","replace","s","escapeHtml","removeLineBreaks","focused","removed","preFocusedValue","onPaste","e","preventDefault","text","clipboardData","getData","document","execCommand","onFocus","getValue","onBlur","ref","innerEditableRef","current","validator","change","innerText","remove","onKeyDown","keyCode","focusInputRef","removeOnBackspace","getRef","inputRef","focus","componentDidMount","this","render","className","contentEditable","dangerouslySetInnerHTML","__html","createRef","index","editable","update","readOnly","tagRemoveClass","newValue","onClick","input","onInputChange","setState","target","onInputKeyDown","addTag","removeTag","tags","push","onChange","i","splice","updateTag","placeholder","maxTags","maxTagsReached","isEditable","showInput","map","tag","key","TagsContext","createContext","TagsInputMobile","tagsInput","setTagsContext","useContext","setTags","useState","form","setForm","errors","setErrors","findFormErrors","genre","newErrors","title","onSubmit","Object","keys","Control","style","marginTop","field","isInvalid","Feedback","type","useIsMobile","checkForDevice","window","innerWidth","isMobile","setIsMobile","useEffect","handlePageResized","addEventListener","removeEventListener","isExisting","setIsExisting","file","setFile","isCreating","setIsCreating","setField","author","description","publisher","series","seriesRow","year","img","Provider","Group","width","float","Label","defaultValue","marginLeft","files","as","genres","ifExists","then","x","create","id","location","pathname","_id","min","variant","show","backdrop","keyboard","Body","onHide","centered","Header","closeButton","Title"],"mappings":"0KAGaA,EAAS,SAACC,GAUnB,OARyB,SAACC,GAGtB,OAAsB,OAFTC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAE9BC,MACN,cAACL,EAAD,eAAeC,IACf,cAAC,IAAD,CAAUK,GAAG,c,iCCVpB,SAASC,EAAQC,GACpB,OAAsB,IAAlBA,EAAOC,aAA2BC,IAAXF,EAMxB,SAASG,EAAOC,EAAGC,GACtB,OAAID,IAAMC,EAMP,SAASC,EAASN,EAAQC,GAC7B,OAAID,EAAOC,QAAUA,EAMlB,SAASM,EAAMC,GAElB,MADc,6BACDC,KAAKD,GAGf,SAASE,EAAQC,GAEpB,MADc,kDACDF,KAAKE,GA5BtB,2K,qDCCaC,EACF,kBADEA,EAEJ,yBAFIA,EAGN,uBAHMA,EAIC,gCAJDA,EAKA,+BALAA,EAMQ,wCCDrB,IAAMC,EAAgB,CACpB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,UASD,SAAUC,EAAeC,GAC7B,OARI,SAAqBA,GACzB,OAAOC,OAAOD,GAAOE,QAAQ,gBAAgB,SAACC,GAE5C,OAAOL,EAAcK,MAKhBC,CAvBH,SAA2BJ,GAC/B,OAAOA,EAAME,QAAQ,iBAAkB,IAsBrBG,CAAiBL,I,gVCVrC,yE,OAGE,EAAAM,SAAmB,EAGnB,EAAAC,SAAmB,EAGnB,EAAAC,gBAA0B,GAM1B,EAAAC,QAAU,SAACC,GAGTA,EAAEC,iBAGF,IAAMC,EAAOF,EAAEG,cAAcC,QAAQ,cAGrCC,SAASC,YAAY,cAAc,EAAOjB,EAAea,KAI3D,EAAAK,QAAU,WACR,EAAKT,gBAAkB,EAAKU,WAC5B,EAAKZ,SAAU,GAGjB,EAAAa,OAAS,WAEP,EAAKb,SAAU,EAEf,IAAMc,EAAM,EAAK1C,MAAM2C,iBAAiBC,QAClC,UAAEC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,OAEnB,IAAK,EAAKjB,SAAWa,EAAK,CAGxB,GAAsB,KAAlBA,EAAIK,UAEN,YADA,EAAK/C,MAAMgD,SAKb,GAAIH,EAGF,IAFcA,EAAU,EAAKL,YAI3B,YADAE,EAAIK,UAAY,EAAKjB,iBAKzBgB,EAAOJ,EAAIK,aAMf,EAAAE,UAAY,SAACjB,GAGX,GAAkB,KAAdA,EAAEkB,QAGJ,OAFAlB,EAAEC,sBACF,EAAKkB,gBAKC,IAAAC,EAAA,QAAAA,kBACF9B,EAAQ,EAAKkB,WACnB,OAAIY,GAAmC,IAAdpB,EAAEkB,SAA2B,KAAV5B,GAC1C,EAAKO,SAAU,EACf,EAAK7B,MAAMgD,cACX,EAAKG,sBAHP,GASF,EAAAX,SAAW,WACT,IAAME,EAAM,EAAKW,SACjB,OAAOX,EAAMA,EAAIK,UAAY,IAG/B,EAAAM,OAAS,WACP,OAAO,EAAKrD,MAAM2C,iBAAiBC,SAGrC,EAAAO,cAAgB,WACN,IAAAG,EAAA,QAAAA,SACJA,GAAYA,EAASV,SACvBU,EAASV,QAAQW,S,EAoBvB,OArHqC,OAWnC,YAAAC,kBAAA,WACEC,KAAK3B,gBAAkB2B,KAAKjB,YAyF9B,YAAAkB,OAAA,WACQ,iBAAEpC,EAAA,EAAAA,MAAOqC,EAAA,EAAAA,UAAWhB,EAAA,EAAAA,iBAC1B,OACE,yBACED,IAAKC,EACLgB,UAAWA,EACXC,iBAAiB,EACjB7B,QAAS0B,KAAK1B,QACdQ,QAASkB,KAAKlB,QACdE,OAAQgB,KAAKhB,OACbQ,UAAWQ,KAAKR,UAChBY,wBAAyB,CAAEC,OAAQzC,EAAeC,OAK1D,EArHA,CAAqC,IAAMvB,W,4UCE3C,yE,OAEE,EAAA4C,iBAAoD,IAAMoB,YAE1D,EAAAf,OAAS,WAAM,SAAKhD,MAAMgD,OAAO,EAAKhD,MAAvB,Q,EA8BjB,OAlCyB,OAMvB,YAAA0D,OAAA,WAEQ,iBAAEpC,EAAA,EAAAA,MAAO0C,EAAA,EAAAA,MAAOC,EAAA,EAAAA,SAAUX,EAAA,EAAAA,SAAUT,EAAA,EAAAA,UAAWqB,EAAA,EAAAA,OAAQC,EAAA,EAAAA,SAAUf,EAAA,EAAAA,kBAEjEgB,EAAkBD,EACQhD,EAAwB,IAAIA,EAA1DA,EAEF,OACE,yBAAKwC,UAAWxC,IACZ8C,GAAY,yBAAKN,UAAWxC,GAA4BG,GACzD2C,GACC,kBAAC,EAAe,CACd3C,MAAOA,EACPgC,SAAUA,EACVX,iBAAkBc,KAAKd,iBACvBgB,UAAWxC,EACX2B,OAAQ,SAACuB,GAAa,OAAAH,EAAOF,EAAP,IACtBhB,OAAQS,KAAKT,OACbH,UAAWA,EACXO,kBAAmBA,IAGvB,yBAAKO,UAAWS,EAAgBE,QAASb,KAAKT,WAMtD,EAlCA,CAAyB,IAAMjD,W,4UCK/B,yE,OAEE,EAAAG,MAAQ,CAAEqE,MAAO,IAGjB,EAAAjB,SAA8C,IAAMS,YAEpD,EAAAS,cAAgB,SAACxC,GACf,EAAKyC,SAAS,CAAEF,MAAOvC,EAAE0C,OAAOpD,SAGlC,EAAAqD,eAAiB,SAAC3C,GAER,IAAAuC,EAAA,QAAAA,MACF,UAAE1B,EAAA,EAAAA,UAAWO,EAAA,EAAAA,kBAGnB,GAAkB,KAAdpB,EAAEkB,QAAgB,CAMpB,GAHAlB,EAAEC,iBAGY,KAAVsC,EAAgB,OAIpB,UAD4B9D,IAAdoC,GAA0BA,EAAU0B,IAEhD,OAIF,EAAKK,OAAOL,QAIT,GAAInB,IAAoC,IAAdpB,EAAEkB,SAA+B,KAAdlB,EAAEkB,SAAiB,CAGnE,GAAc,KAAVqB,EACF,OAIF,EAAKM,UAAU,EAAK7E,MAAM8E,KAAKtE,OAAS,KAM5C,EAAAoE,OAAS,SAACtD,GACR,IAAMwD,EAAY,EAAK9E,MAAM8E,KAAI,QACjCA,EAAKC,KAAKzD,GACV,EAAKtB,MAAMgF,SAASF,GACpB,EAAKL,SAAS,CAAEF,MAAO,MAGzB,EAAAM,UAAY,SAACI,GACX,IAAMH,EAAY,EAAK9E,MAAM8E,KAAI,QACjCA,EAAKI,OAAOD,EAAG,GACf,EAAKjF,MAAMgF,SAASF,IAGtB,EAAAK,UAAY,SAACF,EAAW3D,GACtB,IAAMwD,EAAW,EAAK9E,MAAM8E,KAAI,QAChCA,EAAKG,GAAK3D,EACV,EAAKtB,MAAMgF,SAASF,I,EA8CxB,OAhH2C,OAqEzC,YAAApB,OAAA,sBAEUa,EAAA,WAAAA,MAEF,aAAEO,EAAA,EAAAA,KAAMM,EAAA,EAAAA,YAAaC,EAAA,EAAAA,QAASpB,EAAA,EAAAA,SAAUE,EAAA,EAAAA,SAAUtB,EAAA,EAAAA,UAAWO,EAAA,EAAAA,kBAE7DkC,OAA6B7E,IAAZ4E,GAAwBP,EAAKtE,QAAU6E,EAExDE,GAAapB,IAAoBF,IAAY,GAE7CuB,GAAarB,IAAamB,EAEhC,OACE,yBAAK3B,UAAWxC,GACb2D,EAAKW,KAAI,SAACC,EAAKT,GAAM,OACpB,kBAAC,EAAG,CACFU,IAAKV,EACL3D,MAAOoE,EACP1B,MAAOiB,EACPhB,SAAUsB,EACVpB,SAAUA,IAAY,EACtBb,SAAU,EAAKA,SACfY,OAAQ,EAAKiB,UACbnC,OAAQ,EAAK6B,UACbhC,UAAWA,EACXO,kBAXkB,OAcrBoC,GACC,2BACE9C,IAAKe,KAAKH,SACVhC,MAAOiD,EACPZ,UAAWxC,EACXiE,YAAaA,GAAe,uBAC5BJ,SAAUvB,KAAKe,cACfvB,UAAWQ,KAAKkB,mBAQ5B,EAhHA,CAA2C,IAAM5E,W,wCCrBjD,WAEM6F,EAAcC,wBAAc,IAEnBD,O,6HC2DAE,IAxDf,YAAyC,IAAdC,EAAa,EAAbA,UACNC,EAAmBC,qBAAWL,KAAvCM,QACR,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAuBMC,EAAiB,WACnB,IAAQC,EAAUL,EAAVK,MACFC,EAAY,GASlB,YARcjG,IAAVgG,EACInG,YAAQmG,KACRC,EAAUD,MAAQ,sBAGtBC,EAAUC,MAAQ,qBAGfD,GAGX,OAAO,eAAC,IAAD,CAAME,SAxBQ,SAAC5E,GAClBA,EAAEC,iBACF,IAAMyE,EAAYF,IAClBR,EAAe,GAAD,mBAAKD,GAAL,CAAgBK,EAAKK,SAC/BI,OAAOC,KAAKJ,GAAWlG,OAAS,GAChC+F,EAAUG,IAmBX,UACH,cAAC,IAAD,CACI5B,KAAMiB,EACNf,SAAUgB,EACV7B,UAAU,EACViB,YAAY,+BAEhB,cAAC,IAAK2B,QAAN,CACI3B,YAAY,cAAc4B,MAAO,CAAEC,UAAW,MAC9CjC,SAAU,SAAAhD,GAAC,OA5CDkF,EA4Cc,QA5CP5F,EA4CgBU,EAAE0C,OAAOpD,MA3C9C+E,EAAQ,2BACDD,GADA,kBAEFc,EAAQ5F,UAEPgF,EAAOY,IAAQX,EAAU,2BACxBD,GADuB,kBAEzBY,EAAQ,SAPA,IAACA,EAAO5F,GA6CjB6F,YAAab,EAAOG,QACxB,cAAC,IAAKM,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SAAuCf,EAAOG,QAC9C,cAAC,IAAD,CAAQY,KAAK,SAASL,MAAO,CAAEC,UAAW,MAA1C,4B,oDCxBOK,IAjCK,WAChB,IAAMC,EAAiB,WAEnB,OADkBC,OAAOC,WACP,QAOtB,EAAgCtB,mBAASoB,KAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAoBA,OAlBAC,qBAAU,WACN,IAAMC,EAAoB,WACtBF,EAAYJ,IAQhB,OALAC,OAAOM,iBAAiB,SAAUD,GAClCL,OAAOM,iBAAiB,oBAAqBD,GAC7CL,OAAOM,iBAAiB,OAAQD,GAChCL,OAAOM,iBAAiB,SAAUD,GAE3B,WACHL,OAAOO,oBAAoB,SAAUF,GACrCL,OAAOO,oBAAoB,oBAAqBF,GAChDL,OAAOO,oBAAoB,OAAQF,GACnCL,OAAOO,oBAAoB,SAAUF,MAE1C,IAEIH,I,iLC6LI5H,uBAhNf,WACI,MAAwBqG,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,oBAAS,GAA7C,mBAAO6B,EAAP,KAAmBC,EAAnB,KACA,EAA4B9B,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOrB,EAAP,KAAaoB,EAAb,KACA,EAAwBC,mBAAS,MAAjC,mBAAO+B,EAAP,KAAaC,EAAb,KACA,EAAoChC,oBAAS,GAA7C,mBAAOiC,EAAP,KAAmBC,EAAnB,KACMX,EAAWJ,cAEXgB,EAAW,SAACpB,EAAO5F,GACrB+E,EAAQ,2BACDD,GADA,kBAEFc,EAAQ5F,KAEPgF,EAAOY,IAAQX,EAAU,2BACxBD,GADuB,kBAEzBY,EAAQ,SA+BXV,EAAiB,WAEnB,IAAQG,EAAmEP,EAAnEO,MAAO4B,EAA4DnC,EAA5DmC,OAAQC,EAAoDpC,EAApDoC,YAAgCC,GAAoBrC,EAAvCsC,OAAuCtC,EAA/BuC,UAA+BvC,EAApBqC,WAAWG,EAASxC,EAATwC,KAC5DlC,EAAY,GAkDlB,YAjDcjG,IAAVkG,EACIrG,YAAQqG,KACRD,EAAUC,MAAQ,sBAGtBD,EAAUC,MAAQ,0BAGPlG,IAAX8H,EACIjI,YAAQiI,KACR7B,EAAU6B,OAAS,uBAGvB7B,EAAU6B,OAAS,sBAGV,OAATL,IACAxB,EAAUmC,IAAM,2BAGApI,IAAhB+H,EACIlI,YAAQkI,KACR9B,EAAU8B,YAAc,4BAG5B9B,EAAU8B,YAAc,gCAGf/H,IAATmI,EACIA,EAAO,OACPlC,EAAUkC,KAAO,0BAGrBlC,EAAUkC,KAAO,yBAIHnI,IAAdgI,EACInI,YAAQmI,KACR/B,EAAU+B,UAAY,0BAG1B/B,EAAU+B,UAAY,yBAGN,IAAhB3D,EAAKtE,SACLkG,EAAUD,MAAQ,qCAGfC,GAGX,OACI,eAAC,IAAYoC,SAAb,CAAsBxH,MAAO,CAAE4E,WAA/B,UACI,gCACI,oBAAIvC,UAAU,mCAAd,sBACA,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAKoF,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,qBACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,QAAStG,EAAE0C,OAAOpD,QAAQ8D,YAAY,QAAQ+B,YAAab,EAAOK,MAAOwC,aAAc5H,OAAO,MACpI,cAAC,IAAKwF,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SAAuCf,EAAOK,WAElD,eAAC,IAAKoC,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,sBACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,SAAUtG,EAAE0C,OAAOpD,QAAQ8D,YAAY,SAAS+B,YAAab,EAAOiC,SAC1G,cAAC,IAAKxB,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SAAuCf,EAAOiC,eAGtD,eAAC,IAAKQ,MAAN,CAAY/B,MAAO,CAAEC,UAAW,KAAM+B,MAAO,MAAOI,WAAY,OAAhE,UACI,cAAC,IAAKF,MAAN,qBACA,cAAC,IAAKnC,QAAN,CAAcM,KAAK,OAAOrC,SAAU,SAAAhD,GAAC,OAAImG,EAAQnG,EAAE0C,OAAO2E,MAAM,KAAKlC,YAAab,EAAOuC,MACzF,cAAC,IAAK9B,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SAAuCf,EAAOuC,SAElD,eAAC,IAAKE,MAAN,CAAY/B,MAAO,CAAEC,UAAW,MAAhC,UACI,cAAC,IAAKiC,MAAN,2BACA,cAAC,IAAKnC,QAAN,CAAcuC,GAAG,WAAWtE,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,cAAetG,EAAE0C,OAAOpD,QAAQ6F,YAAab,EAAOkC,cACxG,cAAC,IAAKzB,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SAAuCf,EAAOkC,oBAGtD,sBAAKxB,MAAO,CAAEC,UAAW,KAAM+B,MAAO,MAAOI,WAAY,OAAzD,UACI,cAAC,IAAKF,MAAN,sBACExB,EAMI,KALA,cAAC,IAAD,CACE5C,KAAMA,EACNE,SAAU,SAAAF,GAAI,OAAIoB,EAAQpB,IAC1BM,YAAY,gCAInBsC,EACK,cAAC,IAAD,CAAiB3B,UAAWjB,IAC5B,KACLwB,EAAOG,MACF,qBAAK9C,UAAU,mBAAf,SAAmC2C,EAAOG,QAC1C,QAGV,eAAC,IAAD,CAAMG,SAhIG,SAAC5E,GAClBA,EAAEC,iBACF,IAAMyE,EAAYF,IAClBJ,EAAKmD,OAASzE,EACV+B,OAAOC,KAAKJ,GAAWlG,OAAS,EAChC+F,EAAUG,IAGd2B,GAAc,GACdmB,YAASpD,GAAMqD,MAAK,SAAAC,GACZA,IACArB,GAAc,GACdJ,GAAc,OAItB0B,YAAOvD,EAAM8B,GAAMuB,MAAK,SAAAG,GACT,OAAPA,IAGAvB,GAAc,GACdb,OAAOqC,SAASC,SAAW,YAAc1D,EAAK2D,UA2G9C,UACI,eAAC,IAAD,CAAK/C,MAAO,CAAEC,UAAW,MAAzB,UACI,eAAC,IAAK8B,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,qBACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,SAAUtG,EAAE0C,OAAOpD,QAAQ8D,YAAY,yBAEjF,eAAC,IAAK2D,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,4BACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,YAAatG,EAAE0C,OAAOpD,QAAQ8D,YAAY,2BAA2BiC,KAAK,iBAGxH,eAAC,IAAD,CAAKL,MAAO,CAAEC,UAAW,MAAzB,UACI,eAAC,IAAK8B,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,kCACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,OAAQtG,EAAE0C,OAAOpD,QAAQ8D,YAAY,qBAAqB+B,YAAab,EAAOsC,KAAMvB,KAAK,SAAS2C,IAAI,SAC5I,cAAC,IAAKjD,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SAAuCf,EAAOsC,UAElD,eAAC,IAAKG,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,yBACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,YAAatG,EAAE0C,OAAOpD,QAAQ8D,YAAY,YAAY+B,YAAab,EAAOmC,YAChH,cAAC,IAAK1B,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SAAuCf,EAAOmC,kBAGtD,eAAC,IAAD,CAAKzB,MAAO,CAAEC,UAAW,MAAzB,UACI,eAAC,IAAK8B,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,kDACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,aAActG,EAAE0C,OAAOpD,QAAQ8D,YAAY,2BAErF,eAAC,IAAK2D,MAAN,CAAY/B,MAAO,CAAEgC,MAAO,MAAOC,MAAO,QAA1C,UACI,cAAC,IAAKC,MAAN,+CACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,eAAgBtG,EAAE0C,OAAOpD,QAAQ8D,YAAY,2BAG3F,eAAC,IAAK2D,MAAN,CAAY/B,MAAO,CAAEC,UAAW,MAAhC,UACI,cAAC,IAAKiC,MAAN,0CACA,cAAC,IAAKnC,QAAN,CAAc/B,SAAU,SAAAhD,GAAC,OAAIsG,EAAS,UAAWtG,EAAE0C,OAAOpD,QAAQ8D,YAAY,mBAElF,cAAC,IAAD,CAAQiC,KAAK,SAAS4C,QAAQ,UAAUjD,MAAO,CAAEC,UAAW,MAA5D,4BAGR,cAAC,IAAD,CACIiD,KAAM9B,EACN+B,SAAS,SACTC,UAAU,EAHd,SAKI,cAAC,IAAMC,KAAP,uCAIJ,eAAC,IAAD,CAAOH,KAAMlC,EAAYsC,OAAQrC,EAAesC,UAAQ,EAAxD,UACI,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACI,cAAC,IAAMC,MAAP,sBAEJ,cAAC,IAAML,KAAP","file":"static/js/23.1e136342.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isAuth = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.token !== null\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n","export function isEmpty(string) {\r\n    if (string.length === 0 || string === undefined) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function equals(a, b) {\r\n    if (a === b) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isLength(string, length) {\r\n    if (string.length >= length) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isURL(url) {\r\n    const regex = /^(https:|http:|www\\.)\\S*/gm\r\n    return regex.test(url)\r\n}\r\n\r\nexport function isEmail(email) {\r\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/\r\n    return regex.test(email)\r\n}","\nexport const classSelectors = {\n  wrapper: \"react-tag-input\",\n  input: \"react-tag-input__input\",\n  tag: \"react-tag-input__tag\",\n  tagContent: \"react-tag-input__tag__content\",\n  tagRemove: \"react-tag-input__tag__remove\",\n  tagRemoveReadOnly: \"react-tag-input__tag__remove-readonly\",\n};\n","\nexport function removeLineBreaks(value: string) {\n  return value.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n}\n\n// TAKEN FROM - https://github.com/janl/mustache.js/blob/master/mustache.js#L55\nconst htmlEntityMap = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\",\n  \"/\": \"&#x2F;\",\n  \"`\": \"&#x60;\",\n  \"=\": \"&#x3D;\",\n};\nexport function escapeHtml(value: string) {\n  return String(value).replace(/[&<>\"'`=\\/]/g, (s) => {\n    // @ts-ignore\n    return htmlEntityMap[s];\n  });\n}\n\nexport function safeHtmlString(value: string) {\n  return escapeHtml(removeLineBreaks(value));\n}\n","import React from \"react\";\nimport {safeHtmlString} from \"../utils/functions\";\n\ninterface Props {\n  value: string;\n  className: string;\n  innerEditableRef: React.RefObject<HTMLDivElement>;\n  inputRef: React.RefObject<HTMLInputElement>;\n  change: (value: string) => void;\n  remove: () => void;\n  validator?: (value: string) => boolean;\n  removeOnBackspace?: boolean;\n}\n\nexport class ContentEditable extends React.Component<Props> {\n\n  // Track focus state of editable tag\n  focused: boolean = false;\n\n  // Track if element has been removed from DOM\n  removed: boolean = false;\n\n  // Save value before input is focused / user starts typing\n  preFocusedValue: string = \"\";\n\n  componentDidMount() {\n    this.preFocusedValue = this.getValue();\n  }\n\n  onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\n\n    // Cancel paste event\n    e.preventDefault();\n\n    // Remove formatting from clipboard contents\n    const text = e.clipboardData.getData(\"text/plain\");\n\n    // Insert text manually from paste command\n    document.execCommand(\"insertHTML\", false, safeHtmlString(text));\n\n  }\n\n  onFocus = () => {\n    this.preFocusedValue = this.getValue();\n    this.focused = true;\n  }\n\n  onBlur = () => {\n\n    this.focused = false;\n\n    const ref = this.props.innerEditableRef.current;\n    const { validator, change } = this.props;\n\n    if (!this.removed && ref) {\n\n      // On blur, if no content in tag, remove it\n      if (ref.innerText === \"\") {\n        this.props.remove();\n        return;\n      }\n\n      // Validate input if needed\n      if (validator) {\n        const valid = validator(this.getValue());\n        // If invalidate, switch ref back to pre focused value\n        if (!valid) {\n          ref.innerText = this.preFocusedValue;\n          return;\n        }\n      }\n\n      change(ref.innerText);\n\n    }\n\n  }\n\n  onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n\n    // On enter, focus main tag input\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.focusInputRef();\n      return;\n    }\n\n    // On backspace, if no content in ref, remove tag and focus main tag input\n    const { removeOnBackspace } = this.props;\n    const value = this.getValue();\n    if (removeOnBackspace && e.keyCode === 8 && value === \"\") {\n      this.removed = true;\n      this.props.remove();\n      this.focusInputRef();\n      return;\n    }\n\n  }\n\n  getValue = () => {\n    const ref = this.getRef();\n    return ref ? ref.innerText : \"\";\n  }\n\n  getRef = () => {\n    return this.props.innerEditableRef.current;\n  }\n\n  focusInputRef = () => {\n    const { inputRef } = this.props;\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }\n\n  render() {\n    const { value, className, innerEditableRef } = this.props;\n    return (\n      <div\n        ref={innerEditableRef}\n        className={className}\n        contentEditable={true}\n        onPaste={this.onPaste}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onKeyDown={this.onKeyDown}\n        dangerouslySetInnerHTML={{ __html: safeHtmlString(value) }}\n      />\n    );\n  }\n\n}\n","import React from \"react\";\nimport {classSelectors} from \"../utils/selectors\";\nimport {ContentEditable} from \"./ContentEditable\";\n\ninterface Props {\n  value: string;\n  index: number;\n  editable: boolean;\n  readOnly: boolean;\n  inputRef: React.RefObject<HTMLInputElement>;\n  update: (i: number, value: string) => void;\n  remove: (i: number) => void;\n  validator?: (val: string) => boolean;\n  removeOnBackspace?: boolean;\n}\n\nexport class Tag extends React.Component<Props> {\n\n  innerEditableRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  remove = () => this.props.remove(this.props.index);\n\n  render() {\n\n    const { value, index, editable, inputRef, validator, update, readOnly, removeOnBackspace } = this.props;\n\n    const tagRemoveClass = !readOnly ?\n      classSelectors.tagRemove : `${classSelectors.tagRemove} ${classSelectors.tagRemoveReadOnly}`;\n\n    return (\n      <div className={classSelectors.tag}>\n        {!editable && <div className={classSelectors.tagContent}>{value}</div>}\n        {editable && (\n          <ContentEditable\n            value={value}\n            inputRef={inputRef}\n            innerEditableRef={this.innerEditableRef}\n            className={classSelectors.tagContent}\n            change={(newValue) => update(index, newValue)}\n            remove={this.remove}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        )}\n        <div className={tagRemoveClass} onClick={this.remove}/>\n      </div>\n    );\n\n  }\n\n}\n","import React from \"react\";\nimport {Tag} from \"./components/Tag\";\nimport {classSelectors} from \"./utils/selectors\";\n\ntype Tags = string[];\n\nexport interface ReactTagInputProps {\n  tags: Tags;\n  onChange: (tags: Tags) => void;\n  placeholder?: string;\n  maxTags?: number;\n  validator?: (val: string) => boolean;\n  editable?: boolean;\n  readOnly?: boolean;\n  removeOnBackspace?: boolean;\n}\n\ninterface State {\n  input: string;\n}\n\nexport default class ReactTagInput extends React.Component<ReactTagInputProps, State> {\n\n  state = { input: \"\" };\n\n  // Ref for input element\n  inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n  onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ input: e.target.value });\n  }\n\n  onInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n\n    const { input } = this.state;\n    const { validator, removeOnBackspace } = this.props;\n\n    // On enter\n    if (e.keyCode === 13) {\n\n      // Prevent form submission if tag input is nested in <form>\n      e.preventDefault();\n\n      // If input is blank, do nothing\n      if (input === \"\") { return; }\n\n      // Check if input is valid\n      const valid = validator !== undefined ? validator(input) : true;\n      if (!valid) {\n        return;\n      }\n\n      // Add input to tag list\n      this.addTag(input);\n\n    }\n    // On backspace or delete\n    else if (removeOnBackspace && (e.keyCode === 8 || e.keyCode === 46)) {\n\n      // If currently typing, do nothing\n      if (input !== \"\") {\n        return;\n      }\n\n      // If input is blank, remove previous tag\n      this.removeTag(this.props.tags.length - 1);\n\n    }\n\n  }\n\n  addTag = (value: string) => {\n    const tags = [ ...this.props.tags ];\n    tags.push(value);\n    this.props.onChange(tags);\n    this.setState({ input: \"\" });\n  }\n\n  removeTag = (i: number) => {\n    const tags = [ ...this.props.tags ];\n    tags.splice(i, 1);\n    this.props.onChange(tags);\n  }\n\n  updateTag = (i: number, value: string) => {\n    const tags = [...this.props.tags];\n    tags[i] = value;\n    this.props.onChange(tags);\n  }\n\n  render() {\n\n    const { input } = this.state;\n\n    const { tags, placeholder, maxTags, editable, readOnly, validator, removeOnBackspace } = this.props;\n\n    const maxTagsReached = maxTags !== undefined ? tags.length >= maxTags : false;\n\n    const isEditable = readOnly ? false : (editable || false);\n\n    const showInput = !readOnly && !maxTagsReached;\n\n    return (\n      <div className={classSelectors.wrapper}>\n        {tags.map((tag, i) => (\n          <Tag\n            key={i}\n            value={tag}\n            index={i}\n            editable={isEditable}\n            readOnly={readOnly || false}\n            inputRef={this.inputRef}\n            update={this.updateTag}\n            remove={this.removeTag}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        ))}\n        {showInput &&\n          <input\n            ref={this.inputRef}\n            value={input}\n            className={classSelectors.input}\n            placeholder={placeholder || \"Type and press enter\"}\n            onChange={this.onInputChange}\n            onKeyDown={this.onInputKeyDown}\n          />\n        }\n      </div>\n    );\n\n  }\n\n}\n","import { createContext } from \"react\"\r\n\r\nconst TagsContext = createContext({})\r\n\r\nexport default TagsContext","import { useState, useContext } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\r\nimport { isEmpty } from \"../../../validators\";\r\nimport TagsContext from \"../../../contexts/TagsContext\";\r\n\r\nfunction TagsInputMobile({ tagsInput }) {\r\n    const { setTags: setTagsContext } = useContext(TagsContext)\r\n    const [form, setForm] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newErrors = findFormErrors()\r\n        setTagsContext([...tagsInput, form.genre])\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n        const { genre } = form\r\n        const newErrors = {}\r\n        if (genre !== undefined) {\r\n            if (isEmpty(genre)) {\r\n                newErrors.genre = 'Genre is required!'\r\n            }\r\n        } else {\r\n            newErrors.title = 'Genre is required!'\r\n        }\r\n\r\n        return newErrors\r\n    }\r\n\r\n    return <Form onSubmit={handleSubmit}>\r\n        <ReactTagInput\r\n            tags={tagsInput}\r\n            onChange={setTagsContext}\r\n            readOnly={false}\r\n            placeholder=\"Genres will vizualize here\"\r\n        />\r\n        <Form.Control\r\n            placeholder=\"Enter genre\" style={{ marginTop: \"5%\" }}\r\n            onChange={e => setField('genre', e.target.value)}\r\n            isInvalid={!!errors.genre}></Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">{errors.genre}</Form.Control.Feedback>\r\n        <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Add genre</Button>\r\n    </Form>\r\n}\r\n\r\nexport default TagsInputMobile\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useIsMobile = () => {\r\n    const checkForDevice = () => {\r\n        let windowWidth = window.innerWidth\r\n        if (windowWidth < 767.98) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const [isMobile, setIsMobile] = useState(checkForDevice())\r\n\r\n    useEffect(() => {\r\n        const handlePageResized = () => {\r\n            setIsMobile(checkForDevice)\r\n        }\r\n\r\n        window.addEventListener('resize', handlePageResized)\r\n        window.addEventListener('orientationchange', handlePageResized)\r\n        window.addEventListener('load', handlePageResized)\r\n        window.addEventListener('reload', handlePageResized)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handlePageResized)\r\n            window.removeEventListener('orientationchange', handlePageResized)\r\n            window.removeEventListener('load', handlePageResized)\r\n            window.removeEventListener('reload', handlePageResized)\r\n        }\r\n    }, [])\r\n\r\n    return isMobile\r\n}\r\n\r\nexport default useIsMobile","import React, { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Row from 'react-bootstrap/Row'\r\nimport ReactTagInput from '@pathofdev/react-tag-input'\r\nimport TagsInputMobile from '../utils/TagsInputMobile'\r\nimport TagsContext from '../../../contexts/TagsContext'\r\nimport useIsMobile from '../../../hooks/useIsMobile'\r\nimport { isEmpty } from '../../../validators'\r\nimport { create, ifExists } from '../../../services/books-service'\r\nimport { isAuth } from '../../../hoc/isAuth'\r\n\r\nfunction Create() {\r\n    const [form, setForm] = useState({})\r\n    const [isExisting, setIsExisting] = useState(false)\r\n    const [errors, setErrors] = useState({})\r\n    const [tags, setTags] = useState([])\r\n    const [file, setFile] = useState(null)\r\n    const [isCreating, setIsCreating] = useState(false)\r\n    const isMobile = useIsMobile()\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newErrors = findFormErrors()\r\n        form.genres = tags\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n        setIsCreating(true)\r\n        ifExists(form).then(x => {\r\n            if (x) {\r\n                setIsCreating(false)\r\n                setIsExisting(true)\r\n            }\r\n        })\r\n\r\n        create(form, file).then(id => {\r\n            if (id === null) {\r\n                return\r\n            } else {\r\n                setIsCreating(false)\r\n                window.location.pathname = \"/details/\" + form._id\r\n            }\r\n        })\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n        // eslint-disable-next-line\r\n        const { title, author, description, series, seriesRow, publisher, year } = form\r\n        const newErrors = {}\r\n        if (title !== undefined) {\r\n            if (isEmpty(title)) {\r\n                newErrors.title = 'Title is required!'\r\n            }\r\n        } else {\r\n            newErrors.title = 'Title is required!'\r\n        }\r\n\r\n        if (author !== undefined) {\r\n            if (isEmpty(author)) {\r\n                newErrors.author = 'Author is required!'\r\n            }\r\n        } else {\r\n            newErrors.author = 'Author is required!'\r\n        }\r\n\r\n        if (file === null) {\r\n            newErrors.img = 'Image is required!'\r\n        }\r\n\r\n        if (description !== undefined) {\r\n            if (isEmpty(description)) {\r\n                newErrors.description = 'Description is required!'\r\n            }\r\n        } else {\r\n            newErrors.description = 'Description is required!'\r\n        }\r\n\r\n        if (year !== undefined) {\r\n            if (year < 1950) {\r\n                newErrors.year = 'Minimal value is 1950!'\r\n            }\r\n        } else {\r\n            newErrors.year = 'Year is required!'\r\n\r\n        }\r\n\r\n        if (publisher !== undefined) {\r\n            if (isEmpty(publisher)) {\r\n                newErrors.publisher = 'Publisher is required!'\r\n            }\r\n        } else {\r\n            newErrors.publisher = 'Publisher is required!'\r\n        }\r\n\r\n        if (tags.length === 0) {\r\n            newErrors.genre = 'There must be at least one genre!'\r\n        }\r\n\r\n        return newErrors\r\n    }\r\n\r\n    return (\r\n        <TagsContext.Provider value={{ setTags }}>\r\n            <div>\r\n                <h1 className=\"my-4 font-weight-bold .display-4\">Add Book</h1>\r\n                <Form>\r\n                    <Row>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>Title*</Form.Label>\r\n                            <Form.Control onChange={e => setField('title', e.target.value)} placeholder=\"Title\" isInvalid={!!errors.title} defaultValue={String('')} />\r\n                            <Form.Control.Feedback type=\"invalid\">{errors.title}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>Author*</Form.Label>\r\n                            <Form.Control onChange={e => setField('author', e.target.value)} placeholder=\"Author\" isInvalid={!!errors.author} />\r\n                            <Form.Control.Feedback type=\"invalid\">{errors.author}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Form.Group style={{ marginTop: \"5%\", width: \"50%\", marginLeft: \"25%\" }}>\r\n                        <Form.Label>Image*</Form.Label>\r\n                        <Form.Control type=\"file\" onChange={e => setFile(e.target.files[0])} isInvalid={!!errors.img}></Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.img}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group style={{ marginTop: \"5%\" }}>\r\n                        <Form.Label>Description*</Form.Label>\r\n                        <Form.Control as=\"textarea\" onChange={e => setField('description', e.target.value)} isInvalid={!!errors.description} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.description}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form>\r\n                <div style={{ marginTop: \"5%\", width: \"50%\", marginLeft: \"25%\" }}>\r\n                    <Form.Label>Genres*</Form.Label>\r\n                    {!isMobile\r\n                        ? <ReactTagInput\r\n                            tags={tags}\r\n                            onChange={tags => setTags(tags)}\r\n                            placeholder=\"Enter genre and press enter\"\r\n                        />\r\n                        : null\r\n                    }\r\n                    {isMobile\r\n                        ? <TagsInputMobile tagsInput={tags}></TagsInputMobile>\r\n                        : null}\r\n                    {errors.genre\r\n                        ? <div className=\"invalid-feedback\">{errors.genre}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Row style={{ marginTop: \"5%\" }}>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>Series</Form.Label>\r\n                            <Form.Control onChange={e => setField('series', e.target.value)} placeholder=\"Series - optional\"></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>Series Number</Form.Label>\r\n                            <Form.Control onChange={e => setField('seriesRow', e.target.value)} placeholder=\"Series Number - optional\" type=\"number\" />\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row style={{ marginTop: \"5%\" }}>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>Year of Publishing*</Form.Label>\r\n                            <Form.Control onChange={e => setField('year', e.target.value)} placeholder=\"Year of Publishing\" isInvalid={!!errors.year} type=\"number\" min=\"1950\" />\r\n                            <Form.Control.Feedback type=\"invalid\">{errors.year}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>Publisher*</Form.Label>\r\n                            <Form.Control onChange={e => setField('publisher', e.target.value)} placeholder=\"Publisher\" isInvalid={!!errors.publisher} />\r\n                            <Form.Control.Feedback type=\"invalid\">{errors.publisher}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row style={{ marginTop: \"5%\" }}>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>You can read the book online here: </Form.Label>\r\n                            <Form.Control onChange={e => setField('onlineLink', e.target.value)} placeholder=\"Link to read online\"></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group style={{ width: \"50%\", float: \"left\" }}>\r\n                            <Form.Label>You can download the book here: </Form.Label>\r\n                            <Form.Control onChange={e => setField('downloadLink', e.target.value)} placeholder=\"Link to download\"></Form.Control>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Form.Group style={{ marginTop: \"5%\" }}>\r\n                        <Form.Label>You can buy the book here: </Form.Label>\r\n                        <Form.Control onChange={e => setField('buyLink', e.target.value)} placeholder=\"Link to buy\"></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"success\" style={{ marginTop: \"5%\" }}>Add Book</Button>\r\n                </Form>\r\n            </div >\r\n            <Modal\r\n                show={isCreating}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Body>\r\n                    Book is being added...\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={isExisting} onHide={setIsExisting} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Error</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Book already exists!</Modal.Body>\r\n            </Modal>\r\n        </TagsContext.Provider >\r\n    )\r\n}\r\n\r\nexport default isAuth(Create)"],"sourceRoot":""}