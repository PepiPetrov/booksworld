{"version":3,"sources":["components/books/create/Create.js"],"names":["isAuth","navigate","useNavigate","useState","form","setForm","errors","setErrors","tags","setTags","file","setFile","isMobile","useIsMobile","setField","field","value","findFormErrors","title","author","description","year","series","seriesRow","newErrors","undefined","isEmpty","img","length","genre","Provider","className","style","width","Group","Label","Control","onChange","e","target","placeholder","isInvalid","defaultValue","String","Feedback","type","files","as","tagsInput","genres","onSubmit","preventDefault","Object","keys","create","then","_id","min","marginTop"],"mappings":"4OA+JeA,uBAnJf,WACI,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,MAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACMC,EAAWC,cAEXC,EAAW,SAACC,EAAOC,GACrBX,EAAQ,2BACDD,GADA,kBAEFW,EAAQC,KAEPV,EAAOS,IAAQR,EAAU,2BACxBD,GADuB,kBAEzBS,EAAQ,SAkBXE,EAAiB,WAEnB,IAAQC,EAAwDd,EAAxDc,MAAOC,EAAiDf,EAAjDe,OAAQC,EAAyChB,EAAzCgB,YAAgCC,GAASjB,EAA5BkB,OAA4BlB,EAApBmB,UAAoBnB,EAATiB,MACjDG,EAAY,GA0ClB,YAzCcC,IAAVP,EACIQ,YAAQR,KACRM,EAAUN,MAAQ,sBAGtBM,EAAUN,MAAQ,0BAGPO,IAAXN,EACIO,YAAQP,KACRK,EAAUL,OAAS,uBAGvBK,EAAUL,OAAS,sBAGV,OAATT,IACAc,EAAUG,IAAM,2BAGAF,IAAhBL,EACIM,YAAQN,KACRI,EAAUJ,YAAc,4BAG5BI,EAAUJ,YAAc,gCAGfK,IAATJ,EACIA,EAAO,OACPG,EAAUH,KAAO,0BAGrBG,EAAUH,KAAO,oBAID,IAAhBb,EAAKoB,SACLJ,EAAUK,MAAQ,qCAGfL,GAGX,OACI,cAAC,IAAYM,SAAb,CAAsBd,MAAO,CAAEP,WAA/B,SACI,gCACI,oBAAIsB,UAAU,mCAAd,yBACA,eAAC,IAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACI,eAAC,IAAKC,MAAN,WACI,cAAC,IAAKC,MAAN,oBACA,cAAC,IAAKC,QAAN,CAAcC,SAAU,SAAAC,GAAC,OAAIxB,EAAS,QAASwB,EAAEC,OAAOvB,QAAQwB,YAAY,QAAQC,YAAanC,EAAOY,MAAOwB,aAAcC,OAAO,MACpI,cAAC,IAAKP,QAAQQ,SAAd,CAAuBC,KAAK,UAA5B,SAAuCvC,EAAOY,WAElD,eAAC,IAAKgB,MAAN,WACI,cAAC,IAAKC,MAAN,qBACA,cAAC,IAAKC,QAAN,CAAcC,SAAU,SAAAC,GAAC,OAAIxB,EAAS,SAAUwB,EAAEC,OAAOvB,QAAQwB,YAAY,SAASC,YAAanC,EAAOa,SAC1G,cAAC,IAAKiB,QAAQQ,SAAd,CAAuBC,KAAK,UAA5B,SAAuCvC,EAAOa,YAElD,eAAC,IAAKe,MAAN,WACI,cAAC,IAAKC,MAAN,oBACA,cAAC,IAAKC,QAAN,CAAcS,KAAK,OAAOR,SAAU,SAAAC,GAAC,OAAI3B,EAAQ2B,EAAEC,OAAOO,MAAM,KAAKN,YAAY,iBACjF,cAAC,IAAKJ,QAAQQ,SAAd,CAAuBC,KAAK,UAA5B,SAAuCvC,EAAOqB,SAElD,eAAC,IAAKO,MAAN,WACI,cAAC,IAAKC,MAAN,0BACA,cAAC,IAAKC,QAAN,CAAcW,GAAG,WAAWV,SAAU,SAAAC,GAAC,OAAIxB,EAAS,cAAewB,EAAEC,OAAOvB,QAAQyB,YAAanC,EAAOc,cACxG,cAAC,IAAKgB,QAAQQ,SAAd,CAAuBC,KAAK,UAA5B,SAAuCvC,EAAOc,oBAGtD,sBAAKY,MAAO,CAAEC,MAAO,SAArB,UACI,cAAC,IAAKE,MAAN,qBACEvB,EAMI,KALA,cAAC,IAAD,CACEJ,KAAMA,EACN6B,SAAU,SAAA7B,GAAI,OAAIC,EAAQD,IAC1BgC,YAAY,gCAInB5B,EACK,cAAC,IAAD,CAAiBoC,UAAWxC,IAC5B,KACN,cAAC,IAAK4B,QAAQQ,SAAd,CAAuBC,KAAK,UAA5B,SAAuCvC,EAAO2C,YAElD,eAAC,IAAD,CAAMjB,MAAO,CAAEC,MAAO,SAAWiB,SAtGxB,SAACZ,GAClBA,EAAEa,iBACF,IAAM3B,EAAYP,IAClBb,EAAK6C,OAASzC,EACV4C,OAAOC,KAAK7B,GAAWI,OAAS,EAChCrB,EAAUiB,GAGd8B,YAAOlD,EAAMM,GAAM6C,MAAK,WACpBtD,EAAS,YAAD,OAAaG,EAAKoD,UA6FtB,UACI,eAAC,IAAKtB,MAAN,WACI,cAAC,IAAKC,MAAN,qBACA,cAAC,IAAKC,QAAN,CAAcC,SAAU,SAAAC,GAAC,OAAIxB,EAAS,SAAUwB,EAAEC,OAAOvB,QAAQwB,YAAY,yBAEjF,eAAC,IAAKN,MAAN,WACI,cAAC,IAAKC,MAAN,4BACA,cAAC,IAAKC,QAAN,CAAcC,SAAU,SAAAC,GAAC,OAAIxB,EAAS,YAAawB,EAAEC,OAAOvB,QAAQwB,YAAY,2BAA2BK,KAAK,cAEpH,eAAC,IAAKX,MAAN,WACI,cAAC,IAAKC,MAAN,iCACA,cAAC,IAAKC,QAAN,CAAcC,SAAU,SAAAC,GAAC,OAAIxB,EAAS,OAAQwB,EAAEC,OAAOvB,QAAQwB,YAAY,qBAAqBC,YAAanC,EAAOe,KAAMwB,KAAK,SAASY,IAAI,SAC5I,cAAC,IAAKrB,QAAQQ,SAAd,CAAuBC,KAAK,UAA5B,SAAuCvC,EAAOe,UAElD,eAAC,IAAKa,MAAN,WACI,cAAC,IAAKC,MAAN,+BACA,cAAC,IAAKC,QAAN,CAAcC,SAAU,SAAAC,GAAC,OAAIxB,EAAS,UAAWwB,EAAEC,OAAOvB,QAAQwB,YAAY,mCAElF,cAAC,IAAD,CAAQK,KAAK,SAASb,MAAO,CAAE0B,UAAW,MAA1C","file":"static/js/29.24b9f2c1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactTagInput from '@pathofdev/react-tag-input'\r\nimport TagsInputMobile from '../utils/TagsInputMobile'\r\nimport TagsContext from '../../../contexts/TagsContext'\r\nimport useIsMobile from '../../../hooks/useIsMobile'\r\nimport { isEmpty } from '../../../validators'\r\nimport { create } from '../../../services/books-service'\r\nimport { isAuth } from '../../../hoc/isAuth'\r\n\r\nfunction Create() {\r\n    const navigate = useNavigate()\r\n    const [form, setForm] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n    const [tags, setTags] = useState([])\r\n    const [file, setFile] = useState(null)\r\n    const isMobile = useIsMobile()\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newErrors = findFormErrors()\r\n        form.genres = tags\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n        create(form, file).then(() => {\r\n            navigate(`/details/${form._id}`)\r\n        })\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n        // eslint-disable-next-line\r\n        const { title, author, description, series, seriesRow, year } = form\r\n        const newErrors = {}\r\n        if (title !== undefined) {\r\n            if (isEmpty(title)) {\r\n                newErrors.title = 'Title is required!'\r\n            }\r\n        } else {\r\n            newErrors.title = 'Title is required!'\r\n        }\r\n\r\n        if (author !== undefined) {\r\n            if (isEmpty(author)) {\r\n                newErrors.author = 'Author is required!'\r\n            }\r\n        } else {\r\n            newErrors.author = 'Author is required!'\r\n        }\r\n\r\n        if (file === null) {\r\n            newErrors.img = 'Image is required!'\r\n        }\r\n\r\n        if (description !== undefined) {\r\n            if (isEmpty(description)) {\r\n                newErrors.description = 'Description is required!'\r\n            }\r\n        } else {\r\n            newErrors.description = 'Description is required!'\r\n        }\r\n\r\n        if (year !== undefined) {\r\n            if (year < 1950) {\r\n                newErrors.year = 'Minimal value is 1950!'\r\n            }\r\n        } else {\r\n            newErrors.year = 'Year is required!'\r\n\r\n        }\r\n\r\n        if (tags.length === 0) {\r\n            newErrors.genre = 'There must be at least one genre!'\r\n        }\r\n\r\n        return newErrors\r\n    }\r\n\r\n    return (\r\n        <TagsContext.Provider value={{ setTags }}>\r\n            <div>\r\n                <h1 className=\"my-4 font-weight-bold .display-4\">Create Book</h1>\r\n                <Form style={{ width: '300px' }}>\r\n                    <Form.Group>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control onChange={e => setField('title', e.target.value)} placeholder=\"Title\" isInvalid={!!errors.title} defaultValue={String('')} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.title}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Author</Form.Label>\r\n                        <Form.Control onChange={e => setField('author', e.target.value)} placeholder=\"Author\" isInvalid={!!errors.author} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.author}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control type=\"file\" onChange={e => setFile(e.target.files[0])} placeholder=\"Choose image\"></Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.img}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" onChange={e => setField('description', e.target.value)} isInvalid={!!errors.description} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.description}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form>\r\n                <div style={{ width: \"300px\" }}>\r\n                    <Form.Label>Genres</Form.Label>\r\n                    {!isMobile\r\n                        ? <ReactTagInput\r\n                            tags={tags}\r\n                            onChange={tags => setTags(tags)}\r\n                            placeholder=\"Enter genre and press enter\"\r\n                        />\r\n                        : null\r\n                    }\r\n                    {isMobile\r\n                        ? <TagsInputMobile tagsInput={tags}></TagsInputMobile>\r\n                        : null}\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.genres}</Form.Control.Feedback>\r\n                </div>\r\n                <Form style={{ width: '300px' }} onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Series</Form.Label>\r\n                        <Form.Control onChange={e => setField('series', e.target.value)} placeholder=\"Series - optional\"></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Series Number</Form.Label>\r\n                        <Form.Control onChange={e => setField('seriesRow', e.target.value)} placeholder=\"Series Number - optional\" type=\"number\" />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Year of Publishing</Form.Label>\r\n                        <Form.Control onChange={e => setField('year', e.target.value)} placeholder=\"Year of Publishing\" isInvalid={!!errors.year} type=\"number\" min=\"1950\" />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.year}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Link to buy from</Form.Label>\r\n                        <Form.Control onChange={e => setField('buyLink', e.target.value)} placeholder=\"Link to buy from - optional\"></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Create Book</Button>\r\n                </Form>\r\n            </div >\r\n        </TagsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default isAuth(Create)"],"sourceRoot":""}