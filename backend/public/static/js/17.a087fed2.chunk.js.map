{"version":3,"sources":["services/firebase.js","services/books-service.js","services/comments-service.js","hoc/isAuth.js","services/profile-service.js","services/image-service.js","components/books/profile-components/preferences/Preferences.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","dbRef","ref","getAll","a","get","child","snapshot","val","books","Object","values","sort","b","title","localeCompare","getBook","id","book","_id","create","file","rating","likes","creator","localStorage","getItem","uniqid","createdOn","Date","now","uploadImage","push","edit","vals","bookKey","set","editImage","removeBook","bookId","usersSnapshot","usersVals","userKey","undefined","user","indexOf","splice","favourites","removeAllCommentsForBook","removeImage","remove","getBySeries","name","allBooks","bookBySeries","filter","x","series","seriesNumber","addToFavourites","users","removeFromFavourites","addRating","value","ratings","username","then","console","log","like","setUser","dislike","getNewestBooks","result","slice","getMostLikedBooks","length","getBooksByUser","getAllComments","getCommentsByBook","fitlered","comments","map","createComment","content","comment","editComment","newComment","commentsSnapshot","commentKey","removeComment","commentId","isAuth","Component","props","useSelector","state","token","to","getUserFavourites","userId","getCreatedBooks","created","getLikedBooks","liked","includes","setUserPreferences","authors","genres","preferences","getUserPreferences","getRecommendedBooks","recommendedBooks","genre","author","Set","Array","from","removeProfile","usersSnap","storage","getStorage","imageRef","uploadBytes","getImageUrl","list","imgList","fullRef","items","getDownloadURL","url","deleteObject","getAvatar","setAvatar","avatar","avatarRef","navigate","useNavigate","useState","setGenres","setAuthors","isLoading","setIsLoading","useEffect","className","style","width","marginLeft","onSubmit","e","preventDefault","Group","Label","tags","onChange","placeHolder","type","marginTop"],"mappings":"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","file":"static/js/17.a087fed2.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBBl57WBHwYa-9WHvsRUv62BQ2XgY41J3I\",\r\n    authDomain: \"books-320707.firebaseapp.com\",\r\n    databaseURL: \"https://books-320707-default-rtdb.firebaseio.com\",\r\n    projectId: \"books-320707\",\r\n    storageBucket: \"books-320707.appspot.com\",\r\n    messagingSenderId: \"814577049102\",\r\n    appId: \"1:814577049102:web:057ae971e150c9dc11665f\",\r\n    measurementId: \"G-5QSKEG5MJ7\"\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nexport default app","import { getDatabase, ref, child, get, push, remove, set } from \"firebase/database\"\r\nimport uniqid from 'uniqid'\r\nimport { removeAllCommentsForBook } from './comments-service'\r\nimport { uploadImage, removeImage, editImage } from './image-service'\r\nimport app from './firebase'\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getAll() {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    if (snapshot.val() !== null) {\r\n        const books = Object.values(snapshot.val()).sort((a, b) => a.title.localeCompare(b.title))\r\n        return books\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getBook(id) {\r\n    const books = await getAll()\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book._id === id) {\r\n                return book\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function create(book, file) {\r\n    book.rating = []\r\n    book.likes = []\r\n    book.creator = localStorage.getItem('username')\r\n    book._id = uniqid()\r\n    book.createdOn = Date.now()\r\n    await uploadImage(book._id, file)\r\n    await push(child(dbRef, '/books'), book)\r\n    return book._id\r\n}\r\n\r\nexport async function edit(id, book, file) {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    for (let bookKey in snapshot.val()) {\r\n        const bookCheck = vals[bookKey]\r\n        if (bookCheck._id === id) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    if (file !== null) {\r\n        await editImage(id, file)\r\n    }\r\n}\r\n\r\nexport async function removeBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    const usersSnapshot = await get(child(dbRef, '/books'))\r\n    const usersVals = usersSnapshot.val()\r\n    for (let userKey in usersVals) {\r\n        const user = usersVals[userKey]\r\n        if (user.likes !== undefined) {\r\n            if (user.likes.indexOf(bookId) !== -1) {\r\n                user.likes.splice(user.likes.indexOf(bookId), 1)\r\n                await set(child(dbRef, `/users/${userKey}`), user)\r\n            }\r\n        }\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            if (user.favourites !== undefined) {\r\n                if (user.favourites.indexOf(bookId) !== -1) {\r\n                    user.favourites.splice(user.likes.indexOf(bookId), 1)\r\n                    await set(child(dbRef, `/users/${userKey}`), user)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    await removeAllCommentsForBook(bookId)\r\n    await removeImage(bookId)\r\n    for (let bookKey in vals) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await remove(child(dbRef, `books/${bookKey}`))\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getBySeries(name) {\r\n    const allBooks = await getAll()\r\n    const bookBySeries = allBooks\r\n        .filter(x => x.series === name)\r\n        .sort((a, b) => a.seriesNumber - b.seriesNumber)\r\n    return bookBySeries\r\n}\r\n\r\nexport async function addToFavourites(bookId) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            if (user.favourites === undefined) {\r\n                user.favourites = []\r\n            }\r\n            user.favourites.push(bookId)\r\n            await set(child(dbRef, '/users/' + userKey), user)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport async function removeFromFavourites(bookId) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            user.favourites = user.favourites.filter(x => x !== bookId)\r\n            await set(child(dbRef, `/users/${userKey}`), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function addRating(bookId, value) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    if (book.ratings === undefined) {\r\n        book.ratings = []\r\n    }\r\n    book.ratings.push({ username: localStorage.getItem('username'), rating: value })\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            set(child(dbRef, `books/${bookKey}`), book).then(() => {\r\n                console.log('hehhehheh')\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport async function like(bookId, setUser) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const users = await get(child(dbRef, '/users'))\r\n    const vals = snapshot.val()\r\n    const usersVals = users.val()\r\n    if (book.likes === undefined) {\r\n        book.likes = []\r\n    }\r\n    book.likes.push(localStorage.getItem('username'))\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    for (let userKey in users.val()) {\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            const user = usersVals[userKey]\r\n            if (user.likes === undefined) {\r\n                user.likes = []\r\n            }\r\n            user.likes.push(bookId)\r\n            setUser(user)\r\n            await set(child(dbRef, `users/${userKey}`), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function dislike(bookId) {\r\n    const book = await getBook(bookId)\r\n    const snapshot = await get(child(dbRef, '/books'))\r\n    const vals = snapshot.val()\r\n    const usersSnapshot = await get(child(dbRef, '/users'))\r\n    const usersVals = usersSnapshot.val()\r\n    book.likes.splice(book.likes.indexOf(localStorage.getItem('username')), 1)\r\n    for (let bookKey in snapshot.val()) {\r\n        if (vals[bookKey]._id === bookId) {\r\n            await set(child(dbRef, `books/${bookKey}`), book)\r\n        }\r\n    }\r\n    for (let userKey in usersVals) {\r\n        if (usersVals[userKey]._id === localStorage.getItem('token')) {\r\n            const user = usersVals[userKey]\r\n            if (user.likes !== undefined) {\r\n                if (user.likes.indexOf(bookId) !== -1) {\r\n                    user.likes.splice(user.likes.indexOf(bookId), 1)\r\n                    await set(child(dbRef, `users/${userKey}`), user)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getNewestBooks() {\r\n    const books = await getAll()\r\n    const result = books ? books.sort((a, b) => b.createdOn - a.createdOn).slice(0, 10) : []\r\n\r\n    return result\r\n}\r\n\r\nexport async function getMostLikedBooks() {\r\n    const books = await getAll()\r\n    const result = books\r\n        ? books.filter(x => x.likes).sort((a, b) => a.likes.length - b.likes.length).slice(0, 10)\r\n        : []\r\n\r\n    return result\r\n}\r\n\r\nexport async function getBooksByUser(username) {\r\n    const books = await getAll()\r\n\r\n    return books.filter(x => x.creator === username)\r\n}","import { getDatabase, ref, child, get, push, remove, set } from \"firebase/database\"\r\nimport uniqid from 'uniqid'\r\nimport app from './firebase'\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getAllComments(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    if (snapshot.val() === null) {\r\n        return []\r\n    } else {\r\n        return Object.values(snapshot.val())\r\n    }\r\n}\r\n\r\nexport async function getCommentsByBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    const fitlered = []\r\n    if (snapshot.val() === null) {\r\n        return []\r\n    } else {\r\n        const comments = snapshot.val()\r\n        Object.values(comments).filter(x => x.bookId === bookId).map(x => {\r\n            fitlered.push(x)\r\n            return x\r\n        })\r\n        return fitlered\r\n    }\r\n}\r\n\r\nexport async function createComment({ content }, bookId) {\r\n    const comment = {}\r\n    comment.content = content\r\n    comment.bookId = bookId\r\n    comment.creator = localStorage.getItem('username')\r\n    comment._id = uniqid()\r\n    await push(child(dbRef, '/comments'), comment)\r\n    return await getCommentsByBook(bookId)\r\n}\r\n\r\nexport async function editComment(newComment, id) {\r\n    const commentsSnapshot = await get(child(dbRef, '/comments'))\r\n    const comments = commentsSnapshot.val()\r\n    for (const commentKey in comments) {\r\n        const comment = comments[commentKey]\r\n        if (comment._id === id) {\r\n            comment.content = newComment.content\r\n            await set(child(dbRef, '/comments/' + commentKey), comment)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function removeComment(id) {\r\n    const commentsSnapshot = await get(child(dbRef, '/comments'))\r\n    const comments = commentsSnapshot.val()\r\n    for (const commentKey in comments) {\r\n        const comment = comments[commentKey]\r\n        if (comment._id === id) {\r\n            await remove(child(dbRef, '/comments/' + commentKey))\r\n        }\r\n    }\r\n}\r\n\r\nexport async function removeAllCommentsForBook(bookId) {\r\n    const snapshot = await get(child(dbRef, '/comments'))\r\n    if (snapshot.val() === null) {\r\n        return\r\n    } else {\r\n        const comments = snapshot.val()\r\n        for (const commentId in comments) {\r\n            const comment = comments[commentId]\r\n            if (comment.bookId === bookId) {\r\n                await remove(child(dbRef, '/comments/' + commentId))\r\n            }\r\n        }\r\n    }\r\n}","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isAuth = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.token !== null\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n","import { getDatabase, ref, child, get, set, remove } from \"firebase/database\"\r\nimport app from './firebase'\r\nimport { getAll, getBook, removeBook, edit } from './books-service'\r\nimport { getAllComments, removeAllCommentsForBook, removeComment } from \"./comments-service\"\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getUserFavourites() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let userId\r\n    let favourites = []\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            userId = userKey\r\n            if (user.favourites) {\r\n                favourites = user.favourites\r\n            }\r\n        }\r\n    }\r\n    for (let id of favourites) {\r\n        const book = await getBook(id)\r\n        if (book === undefined) {\r\n            favourites.splice(favourites.indexOf(id), 1)\r\n        }\r\n        const user = users[userId]\r\n        user.favourites = favourites\r\n        await set(child(dbRef, '/users/' + userId), user)\r\n    }\r\n    return favourites\r\n}\r\n\r\nexport async function getCreatedBooks() {\r\n    const books = await getAll()\r\n    let created = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.creator === localStorage.getItem('username')) {\r\n                created.push(book)\r\n            }\r\n        }\r\n    }\r\n    return created\r\n}\r\n\r\nexport async function getLikedBooks() {\r\n    const books = await getAll()\r\n    let liked = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.likes !== undefined && book.likes.includes(localStorage.getItem('username'))) {\r\n                liked.push(book)\r\n            }\r\n        }\r\n    }\r\n    return liked\r\n}\r\n\r\nexport async function setUserPreferences({ authors, genres }) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            user.preferences = { authors, genres }\r\n            await set(child(dbRef, '/users/' + userKey), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getUserPreferences() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let preferences = {}\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            if (user.preferences) {\r\n                preferences = user.preferences\r\n            } else {\r\n                preferences = { authors: [], genres: [] }\r\n            }\r\n        }\r\n    }\r\n    return preferences\r\n}\r\n\r\nexport async function getRecommendedBooks() {\r\n    const { genres, authors } = await getUserPreferences()\r\n    const allBooks = await getAll()\r\n    const recommendedBooks = []\r\n\r\n    if (allBooks !== null) {\r\n        if (genres && genres.length > 0) {\r\n            for (let genre of genres) {\r\n                const filteredBooks = allBooks.filter(x => x.genres.includes(genre))\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n        if (authors && authors.length > 0) {\r\n            for (let author of authors) {\r\n                const filteredBooks = allBooks.filter(x => x.author === author)\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n    }\r\n    const set = new Set(recommendedBooks)\r\n    return Array.from(set)\r\n}\r\n\r\nexport async function removeProfile() {\r\n    const books = await getAll()\r\n    const usersSnap = await get(dbRef, '/users')\r\n    const users = usersSnap.val()\r\n    const comments = await getAllComments()\r\n    for (const book of books) {\r\n        if (book.creator === localStorage.getItem('username')) {\r\n            await removeBook(book._id)\r\n        }\r\n        if (book.likes && book.likes.includes(localStorage.getItem('username'))) {\r\n            book.likes.splice(book.likes.indexOf(localStorage.getItem('username')), 1)\r\n            await edit(book._id, book)\r\n        }\r\n        await removeAllCommentsForBook(book._id)\r\n    }\r\n\r\n    for (const comment of comments) {\r\n        if (comment.creator === localStorage.getItem('username')) {\r\n            await removeComment(comment._id)\r\n        }\r\n    }\r\n\r\n    for (const userId in users) {\r\n        const user = users[userId]\r\n        if (user._id === localStorage.getItem('token')) {\r\n            await remove(child(dbRef, '/users/' + userId))\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { getStorage, ref, uploadBytes, getDownloadURL, list, deleteObject } from 'firebase/storage'\r\nimport app from './firebase'\r\n\r\nconst storage = getStorage(app)\r\n\r\nexport async function uploadImage(bookId, file) {\r\n    const imageRef = ref(storage, `${bookId}/${file.name}`)\r\n    await uploadBytes(imageRef, file)\r\n}\r\n\r\nexport async function getImageUrl(bookId) {\r\n    const imageRef = ref(storage, `${bookId}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n    const url = await getDownloadURL(fullRef)\r\n    return url\r\n}\r\n\r\nexport async function removeImage(bookId) {\r\n    const imageRef = ref(storage, `${bookId}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n\r\n    await deleteObject(fullRef)\r\n}\r\n\r\nexport async function editImage(bookId, file) {\r\n    await removeImage(bookId)\r\n    await uploadImage(bookId, file)\r\n}\r\n\r\nexport async function getAvatar(username) {\r\n    const imageRef = ref(storage, `${username}/`)\r\n    const imgList = await list(imageRef)\r\n    const fullRef = imgList.items[0]\r\n    if (fullRef) {\r\n        const url = await getDownloadURL(fullRef)\r\n        return url\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nexport async function setAvatar(username, avatar) {\r\n    if (avatar !== null) {\r\n        const imageRef = ref(storage, `${username}/`)\r\n        const avatarRef = ref(storage, `${username}/${avatar.name}`)\r\n        const imgList = await list(imageRef)\r\n        const fullRef = imgList.items[0]\r\n        try {\r\n            await deleteObject(fullRef)\r\n        } catch (e) { }\r\n        await uploadBytes(avatarRef, avatar)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\"\r\nimport { setUserPreferences, getUserPreferences } from '../../../../services/profile-service'\r\nimport { isAuth } from '../../../../hoc/isAuth'\r\n\r\nfunction Preferences() {\r\n    const navigate = useNavigate()\r\n    const [genres, setGenres] = useState([])\r\n    const [authors, setAuthors] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getUserPreferences().then(x => {\r\n                setGenres(x.genres || [])\r\n                setAuthors(x.authors || [])\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setUserPreferences({ authors, genres }).then(() => {\r\n            navigate(`/profile/recommended`)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"my-4 font-weight-bold .display-4\">Set Preferences</h1>\r\n            <Form style={{ width: '300px', marginLeft: \"20%\" }} onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Genres</Form.Label>\r\n                    <ReactTagInput\r\n                        tags={genres}\r\n                        onChange={setGenres}\r\n                        placeHolder=\"Enter genre and press enter\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Authors</Form.Label>\r\n                    <ReactTagInput\r\n                        tags={authors}\r\n                        onChange={setAuthors}\r\n                        placeHolder=\"Enter author and press enter\"\r\n                    />\r\n                </Form.Group>\r\n                <Button type=\"submit\" style={{ marginTop: '5%' }}>Set Preferences</Button>\r\n            </Form>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default isAuth(Preferences)"],"sourceRoot":""}