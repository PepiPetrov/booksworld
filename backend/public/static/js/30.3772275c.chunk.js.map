{"version":3,"sources":["components/books/edit/Edit.js","hoc/isOwner.js"],"names":["isAuth","Component","id","useParams","navigate","useNavigate","isMobile","useIsMobile","useState","form","setForm","errors","setErrors","tags","setTags","file","setFile","useEffect","getBook","then","x","genres","setField","field","value","handleSubmit","e","preventDefault","newErrors","findFormErrors","Object","keys","length","edit","_id","title","author","description","year","series","seriesRow","undefined","genre","TagsContext","Provider","className","Form","style","width","onSubmit","Group","Label","Control","onChange","target","placeholder","isInvalid","Feedback","type","files","as","TagsInputMobile","tagsInput","min","buyLink","Button","marginTop","props","useSelector","state","user","username","localStorage","getItem","to"],"mappings":"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","file":"static/js/30.3772275c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactTagInput from '@pathofdev/react-tag-input'\r\nimport TagsInputMobile from '../utils/TagsInputMobile'\r\nimport TagsContext from '../../../contexts/TagsContext'\r\nimport useIsMobile from '../../../hooks/useIsMobile'\r\nimport { edit, getBook } from '../../../services/books-service'\r\nimport { isAuth } from '../../../hoc/isAuth'\r\nimport { isOwner } from '../../../hoc/isOwner'\r\n\r\nfunction Edit() {\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    const isMobile = useIsMobile()\r\n    const [form, setForm] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n    const [tags, setTags] = useState([])\r\n    const [file, setFile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getBook(id).then(x => {\r\n            setTags(x.genres)\r\n            setForm(x)\r\n        })\r\n        return\r\n    }, [id, navigate])\r\n\r\n    form.genres = tags\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newErrors = findFormErrors()\r\n        form.genres = tags\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n        edit(id, form, file).then(x => {\r\n            navigate(`/details/${form._id}`)\r\n        })\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n        // eslint-disable-next-line\r\n        const { title, author, description, series, seriesRow, year } = form\r\n        const newErrors = {}\r\n        if (title === undefined || title.length === 0) {\r\n            newErrors.title = 'Title is required!'\r\n        }\r\n        if (author === undefined || author.length === 0) {\r\n            newErrors.author = 'Author is required!'\r\n        }\r\n\r\n        if (description === undefined || description.length === 0) {\r\n            newErrors.description = 'Description is required!'\r\n        }\r\n\r\n        if (year !== undefined) {\r\n            if (year < 1950) {\r\n                newErrors.year = 'Minimal value is 1950!'\r\n            }\r\n        } else {\r\n            newErrors.year = 'Year is required!'\r\n        }\r\n\r\n        if (tags.length === 0) {\r\n            newErrors.genre = 'There must be at least one genre!'\r\n        }\r\n\r\n        return newErrors\r\n    }\r\n\r\n    return (\r\n        <TagsContext.Provider value={{ setTags }}>\r\n            <div>\r\n                <h1 className=\"my-4 font-weight-bold .display-4\">Edit Book</h1>\r\n                <Form style={{ width: '300px' }} onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control onChange={e => setField('title', e.target.value)} placeholder=\"Title\" isInvalid={!!errors.title} value={form.title} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.title}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Author</Form.Label>\r\n                        <Form.Control onChange={e => setField('author', e.target.value)} placeholder=\"Author\" isInvalid={!!errors.author} value={form.author} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.author}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Image (optional, original image won't be replaced)</Form.Label>\r\n                        <Form.Control type=\"file\" onChange={e => setFile(e.target.files[0])}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" onChange={e => setField('description', e.target.value)} isInvalid={!!errors.description} value={form.description} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.description}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form>\r\n                <div style={{ width: \"300px\" }}>\r\n                    <Form.Label>Genres</Form.Label>\r\n                    {!isMobile\r\n                        ? <ReactTagInput\r\n                            tags={tags}\r\n                            onChange={tags => setTags(tags)}\r\n                            placeholder=\"Enter genre and press enter\"\r\n                        />\r\n                        : null\r\n                    }\r\n                    {isMobile\r\n                        ? <TagsInputMobile tagsInput={tags} onChange={setTags}></TagsInputMobile>\r\n                        : null}\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.genres}</Form.Control.Feedback>\r\n                </div>\r\n                <Form style={{ width: \"300px\" }} onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Series (optional)</Form.Label>\r\n                        <Form.Control onChange={e => setField('series', e.target.value)} placeholder=\"Series\" value={form.series}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Series Number (optional)</Form.Label>\r\n                        <Form.Control onChange={e => setField('seriesRow', e.target.value)} placeholder=\"Series Number\" type=\"number\" value={form.seriesRow} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Year of Publishing</Form.Label>\r\n                        <Form.Control onChange={e => setField('year', e.target.value)} placeholder=\"Year of Publishing\" isInvalid={!!errors.year} type=\"number\" min=\"1950\" value={form.year} />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.year}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Link to buy from (optional)</Form.Label>\r\n                        <Form.Control onChange={e => setField('buyLink', e.target.value)} placeholder=\"Link to buy from\" value={form.buyLink}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Edit Book</Button>\r\n                </Form>\r\n            </div >\r\n        </TagsContext.Provider >\r\n    )\r\n}\r\n\r\nexport default isAuth(isOwner(Edit))","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isOwner = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.username === localStorage.getItem('username')\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n"],"sourceRoot":""}