{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","services/search-service.js","components/books/search-components/title/Title.js"],"names":["FormContext","React","FormGroup","ref","controlId","as","Component","props","context","useMemo","_jsx","Provider","value","children","displayName","FormCheckLabel","bsPrefix","className","htmlFor","useContext","useBootstrapPrefix","classNames","FormCheck","id","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","title","type","label","innerFormContext","hasLabel","input","FormCheckInput","_jsxs","_Fragment","Feedback","tooltip","Object","assign","Input","Label","FormRange","Switch","propTypes","_ref","PropTypes","any","validated","bool","elementType","Form","Group","Control","FormControl","Floating","FormFloating","Check","FormLabel","Text","FormText","Range","Select","FormSelect","FloatingLabel","string","DEVICE_SIZES","useCol","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","Col","colProps","length","size","htmlSize","plaintext","readOnly","createWithBsPrefix","column","visuallyHidden","columnClass","defaultProps","muted","searchByTitle","a","getAll","books","results","book","includes","sort","b","localeCompare","searchByAuthor","author","searchByGenre","genres","searchBySeries","series","seriesRow","SearchByTitle","useState","form","setForm","errors","setErrors","setBooks","isResult","setIsResult","isLoading","setIsLoading","shouldShow","setShouldShow","findFormErrors","keyword","newErrors","undefined","width","marginLeft","onSubmit","e","preventDefault","keys","then","x","onChange","field","target","placeholder","marginTop"],"mappings":"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","file":"static/js/15.989c43e2.chunk.js","sourcesContent":["import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import { getAll } from './books-service'\r\n\r\nexport async function searchByTitle(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            if (book.title.includes(string)) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.title.localeCompare(b.title))\r\n    }\r\n    return results\r\n}\r\n\r\nexport async function searchByAuthor(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            if (book.author.includes(string)) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.title.localeCompare(b.title))\r\n    }\r\n    return results\r\n}\r\n\r\nexport async function searchByGenre(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            if (book.genres.includes(string)) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.title.localeCompare(b.title))\r\n    }\r\n    return results\r\n}\r\n\r\nexport async function searchBySeries(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            if (book.series.includes(string)) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.seriesRow - b.seriesRow)\r\n    }\r\n    return results\r\n}","import { useState } from \"react\"\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport BooksList from \"../../utils/BooksList/BooksList\"\r\nimport { searchByTitle } from '../../../../services/search-service'\r\n\r\nexport default function SearchByTitle() {\r\n    const [form, setForm] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n    const [books, setBooks] = useState([])\r\n    const [isResult, setIsResult] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [shouldShow, setShouldShow] = useState(false)\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newErrors = findFormErrors()\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n        setIsLoading(true)\r\n        searchByTitle(form.keyword).then(x => {\r\n            setBooks(x)\r\n            if (x.length > 0) {\r\n                setIsResult(true)\r\n            }\r\n            setShouldShow(true)\r\n            setIsLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n        const { keyword } = form\r\n        const newErrors = {}\r\n\r\n        if (keyword === undefined || keyword === '') {\r\n            newErrors.keyword = 'Keyword is required!'\r\n        }\r\n\r\n        return newErrors\r\n    }\r\n\r\n    return <div>\r\n        <h1 className=\"my-4 font-weight-bold .display-4\">Search by title</h1>\r\n        <Form style={{ width: \"50%\", marginLeft: \"27%\" }} onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Control onChange={e => setField('keyword', e.target.value)}\r\n                    placeholder=\"Keyword\" isInvalid={!!errors.keyword} />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.keyword}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Search</Button>\r\n        </Form>\r\n        {shouldShow ?\r\n            isResult\r\n                ? <BooksList books={books} />\r\n                : <p>No results</p>\r\n            : isLoading\r\n                ? <p>Loading results...</p>\r\n                : null\r\n        }\r\n    </div >\r\n\r\n}"],"sourceRoot":""}