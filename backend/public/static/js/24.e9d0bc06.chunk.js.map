{"version":3,"sources":["hoc/isAuth.js","components/books/profile-components/preferences/Preferences.js"],"names":["isAuth","Component","props","useSelector","state","user","token","to","navigate","useNavigate","useState","genres","setGenres","authors","setAuthors","isLoading","setIsLoading","useEffect","getUserPreferences","then","x","className","style","width","marginLeft","onSubmit","e","preventDefault","setUserPreferences","Group","Label","tags","onChange","placeHolder","type","marginTop"],"mappings":"0KAGaA,EAAS,SAACC,GAUnB,OARyB,SAACC,GAGtB,OAAsB,OAFTC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAE9BC,MACN,cAACL,EAAD,eAAeC,IACf,cAAC,IAAD,CAAUK,GAAG,c,oHCkDZP,uBApDf,WACI,IAAMQ,EAAWC,cACjB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAsBA,OApBAC,qBAAU,WAQN,OAPIF,GACAG,cAAqBC,MAAK,SAAAC,GACtBR,EAAUQ,EAAET,QAAU,IACtBG,EAAWM,EAAEP,SAAW,OAIzB,WACHG,GAAa,MAElB,CAACD,IAUA,gCACI,oBAAIM,UAAU,mCAAd,6BACA,eAAC,IAAD,CAAMC,MAAO,CAAEC,MAAO,QAASC,WAAY,OAASC,SAVvC,SAACC,GAClBA,EAAEC,iBACFC,YAAmB,CAAEf,UAASF,WAAUQ,MAAK,WACzCX,EAAS,4BAOT,UACI,eAAC,IAAKqB,MAAN,WACI,cAAC,IAAKC,MAAN,qBACA,cAAC,IAAD,CACIC,KAAMpB,EACNqB,SAAUpB,EACVqB,YAAY,mCAGpB,eAAC,IAAKJ,MAAN,WACI,cAAC,IAAKC,MAAN,sBACA,cAAC,IAAD,CACIC,KAAMlB,EACNmB,SAAUlB,EACVmB,YAAY,oCAGpB,cAAC,IAAD,CAAQC,KAAK,SAASZ,MAAO,CAAEa,UAAW,MAA1C","file":"static/js/24.e9d0bc06.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isAuth = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.token !== null\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\"\r\nimport { setUserPreferences, getUserPreferences } from '../../../../services/profile-service'\r\nimport { isAuth } from '../../../../hoc/isAuth'\r\n\r\nfunction Preferences() {\r\n    const navigate = useNavigate()\r\n    const [genres, setGenres] = useState([])\r\n    const [authors, setAuthors] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getUserPreferences().then(x => {\r\n                setGenres(x.genres || [])\r\n                setAuthors(x.authors || [])\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setUserPreferences({ authors, genres }).then(() => {\r\n            navigate(`/profile/recommended`)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"my-4 font-weight-bold .display-4\">Set Preferences</h1>\r\n            <Form style={{ width: '300px', marginLeft: \"20%\" }} onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Genres</Form.Label>\r\n                    <ReactTagInput\r\n                        tags={genres}\r\n                        onChange={setGenres}\r\n                        placeHolder=\"Enter genre and press enter\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Authors</Form.Label>\r\n                    <ReactTagInput\r\n                        tags={authors}\r\n                        onChange={setAuthors}\r\n                        placeHolder=\"Enter author and press enter\"\r\n                    />\r\n                </Form.Group>\r\n                <Button type=\"submit\" style={{ marginTop: '5%' }}>Set Preferences</Button>\r\n            </Form>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default isAuth(Preferences)"],"sourceRoot":""}