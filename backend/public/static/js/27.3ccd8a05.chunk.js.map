{"version":3,"sources":["services/search-service.js","hoc/isAuth.js","services/profile-service.js","components/books/profile-components/profile-info/ProfileInfo.js"],"names":["searchByTitle","string","a","getAll","books","results","book","title","toLowerCase","includes","push","sort","b","localeCompare","searchByAuthor","author","searchByGenre","genres","map","x","filter","length","searchBySeries","series","seriesRow","isAuth","Component","props","useSelector","state","user","token","to","db","getDatabase","app","dbRef","ref","getUserFavourites","get","child","userKey","snapshot","users","val","favourites","_id","localStorage","getItem","userId","id","getBook","undefined","splice","indexOf","set","getCreatedBooks","created","creator","getLikedBooks","liked","likes","setUserPreferences","authors","preferences","getUserPreferences","getRecommendedBooks","allBooks","recommendedBooks","genre","Set","Array","from","removeProfile","usersSnap","getAllComments","comments","removeBook","edit","removeAllCommentsForBook","comment","removeComment","remove","isFileImage","file","split","dispatch","useDispatch","navigate","useNavigate","useState","createdLength","setCreatedLength","likedLength","setLikedLength","favouritesLength","setFavouritesLength","isLoading","setIsLoading","setFile","url","setUrl","isLoadingAvatar","setIsLoadingAvatar","useEffect","then","getAvatar","catch","onSubmit","e","preventDefault","fetch","res","blob","noAvatar","File","type","setAvatar","window","location","reload","style","width","marginTop","Header","username","Body","src","alt","className","variant","onClick","confirm","logout","Group","Label","Control","onChange","target","files","show"],"mappings":"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","file":"static/js/27.3ccd8a05.chunk.js","sourcesContent":["import { getAll } from './books-service'\r\n\r\nexport async function searchByTitle(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            if (book.title.toLowerCase().includes(string.toLowerCase())) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.title.localeCompare(b.title))\r\n    }\r\n    return results\r\n}\r\n\r\nexport async function searchByAuthor(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            if (book.author.toLowerCase().includes(string.toLowerCase())) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.title.localeCompare(b.title))\r\n    }\r\n    return results\r\n}\r\n\r\nexport async function searchByGenre(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            const genres = book.genres.map(x => x.toLowerCase())\r\n            if (genres.filter(x => x.includes(string.toLowerCase())).length > 0) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.title.localeCompare(b.title))\r\n    }\r\n    return results\r\n}\r\n\r\nexport async function searchBySeries(string) {\r\n    const books = await getAll()\r\n    const results = []\r\n    if (books !== null) {\r\n        for (const book of books) {\r\n            if (book.series && book.series.toLowerCase().includes(string.toLowerCase())) {\r\n                results.push(book)\r\n            }\r\n        }\r\n        results.sort((a, b) => a.seriesRow - b.seriesRow)\r\n    }\r\n    return results\r\n}","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const isAuth = (Component) => {\r\n\r\n    const WrapperComponent = (props) => {\r\n        const user = useSelector((state) => state.user)\r\n\r\n        return user.token !== null\r\n            ? <Component {...props} />\r\n            : <Navigate to=\"/login\" />\r\n    }\r\n\r\n    return WrapperComponent\r\n}\r\n","import { getDatabase, ref, child, get, set, remove } from \"firebase/database\"\r\nimport app from './firebase'\r\nimport { getAll, getBook, removeBook, edit } from './books-service'\r\nimport { searchByGenre,searchByAuthor } from './search-service'\r\nimport { getAllComments, removeAllCommentsForBook, removeComment } from \"./comments-service\"\r\n\r\nconst db = getDatabase(app)\r\nconst dbRef = ref(db)\r\n\r\nexport async function getUserFavourites() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let userId\r\n    let favourites = []\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            userId = userKey\r\n            if (user.favourites) {\r\n                favourites = user.favourites\r\n            }\r\n        }\r\n    }\r\n    for (let id of favourites) {\r\n        const book = await getBook(id)\r\n        if (book === undefined) {\r\n            favourites.splice(favourites.indexOf(id), 1)\r\n        }\r\n        const user = users[userId]\r\n        user.favourites = favourites\r\n        await set(child(dbRef, '/users/' + userId), user)\r\n    }\r\n    return favourites\r\n}\r\n\r\nexport async function getCreatedBooks() {\r\n    const books = await getAll()\r\n    let created = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.creator === localStorage.getItem('username')) {\r\n                created.push(book)\r\n            }\r\n        }\r\n    }\r\n    return created\r\n}\r\n\r\nexport async function getLikedBooks() {\r\n    const books = await getAll()\r\n    let liked = []\r\n    if (books !== null) {\r\n        for (let book of books) {\r\n            if (book.likes !== undefined && book.likes.includes(localStorage.getItem('username'))) {\r\n                liked.push(book)\r\n            }\r\n        }\r\n    }\r\n    return liked\r\n}\r\n\r\nexport async function setUserPreferences({ authors, genres }) {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            user.preferences = { authors, genres }\r\n            await set(child(dbRef, '/users/' + userKey), user)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getUserPreferences() {\r\n    const snapshot = await get(child(dbRef, '/users'))\r\n    const users = snapshot.val()\r\n    let preferences = {}\r\n    for (let userKey in users) {\r\n        if (users[userKey]._id === localStorage.getItem('token')) {\r\n            const user = users[userKey]\r\n            if (user.preferences) {\r\n                preferences = user.preferences\r\n            } else {\r\n                preferences = { authors: [], genres: [] }\r\n            }\r\n        }\r\n    }\r\n    return preferences\r\n}\r\n\r\nexport async function getRecommendedBooks() {\r\n    const { genres, authors } = await getUserPreferences()\r\n    const allBooks = await getAll()\r\n    const recommendedBooks = []\r\n\r\n    if (allBooks !== null) {\r\n        if (genres && genres.length > 0) {\r\n            for (let genre of genres) {\r\n                const filteredBooks = await searchByGenre(genre)\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n        if (authors && authors.length > 0) {\r\n            for (let author of authors) {\r\n                const filteredBooks = await searchByAuthor(author)\r\n                filteredBooks.map(x => {\r\n                    recommendedBooks.push(x)\r\n                    return x\r\n                })\r\n            }\r\n        }\r\n    }\r\n    const set = new Set(recommendedBooks)\r\n    return Array.from(set)\r\n}\r\n\r\nexport async function removeProfile() {\r\n    const books = await getAll()\r\n    const usersSnap = await get(dbRef, '/users')\r\n    const users = usersSnap.val()\r\n    const comments = await getAllComments()\r\n    for (const book of books) {\r\n        if (book.creator === localStorage.getItem('username')) {\r\n            await removeBook(book._id)\r\n        }\r\n        if (book.likes && book.likes.includes(localStorage.getItem('username'))) {\r\n            book.likes.splice(book.likes.indexOf(localStorage.getItem('username')), 1)\r\n            await edit(book._id, book)\r\n        }\r\n        await removeAllCommentsForBook(book._id)\r\n    }\r\n\r\n    for (const comment of comments) {\r\n        if (comment.creator === localStorage.getItem('username')) {\r\n            await removeComment(comment._id)\r\n        }\r\n    }\r\n\r\n    for (const userId in users) {\r\n        const user = users[userId]\r\n        if (user._id === localStorage.getItem('token')) {\r\n            await remove(child(dbRef, '/users/' + userId))\r\n        }\r\n    }\r\n\r\n}","import { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { confirm } from 'react-bootstrap-confirmation'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isAuth } from '../../../../hoc/isAuth'\r\nimport { logout } from '../../../../redux/slices/authSlice'\r\nimport { getCreatedBooks, getLikedBooks, getUserFavourites, removeProfile } from '../../../../services/profile-service'\r\nimport { setAvatar, getAvatar } from '../../../../services/image-service'\r\n\r\nfunction ProfileInfo() {\r\n    const user = useSelector((state) => state.user)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [createdLength, setCreatedLength] = useState(0)\r\n    const [likedLength, setLikedLength] = useState(0)\r\n    const [favouritesLength, setFavouritesLength] = useState(0)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [file, setFile] = useState(null)\r\n    const [url, setUrl] = useState('')\r\n    const [isLoadingAvatar, setIsLoadingAvatar] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getCreatedBooks().then(x => {\r\n            if (x !== undefined) {\r\n                setCreatedLength(x.length)\r\n            }\r\n        })\r\n        getLikedBooks().then(x => {\r\n            if (x !== undefined) {\r\n                setLikedLength(x.length)\r\n            }\r\n        })\r\n        getUserFavourites().then(x => {\r\n            if (x !== undefined) {\r\n                setFavouritesLength(x.length)\r\n            }\r\n        })\r\n\r\n        getAvatar(localStorage.getItem('username')).then(x => {\r\n            setUrl(x)\r\n        }).catch(x => {\r\n            setUrl('https://www.kindpng.com/picc/m/22-223863_no-avatar-png-circle-transparent-png.png')\r\n        })\r\n\r\n        return () => {\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, url])\r\n\r\n    const handleBtnClick = () => {\r\n        confirm('Are you sure you want to remove your profile? The action is irreversible!').then(x => {\r\n            if (x) {\r\n                removeProfile().then(x => {\r\n                    dispatch(logout())\r\n                    navigate('/')\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (file !== null) {\r\n            setIsLoadingAvatar(true)\r\n            if (!isFileImage(file)) {\r\n                fetch('https://media.istockphoto.com/illustrations/blank-man-profile-head-icon-placeholder-illustration-id1298261537?k=20&m=1298261537&s=612x612&w=0&h=8plXnK6Ur3LGqG9s-Xt2ZZfKk6bI0IbzDZrNH9tr9Ok=')\r\n                    .then(res => res.blob())\r\n                    .then(blob => {\r\n                        const noAvatar = new File([blob], \"avatar.jpg\", {\r\n                            type: blob.type,\r\n                        });\r\n                        setAvatar(localStorage.getItem('username'), noAvatar).then(() => {\r\n                            setIsLoadingAvatar(false)\r\n                            window.location.reload()\r\n                        })\r\n                    });\r\n            }\r\n            setAvatar(localStorage.getItem('username'), file).then(() => {\r\n                setIsLoadingAvatar(false)\r\n                window.location.reload()\r\n            })\r\n        }\r\n    }\r\n\r\n    return !isLoading\r\n        ? <>\r\n            <Card style={{ width: \"300px\", marginTop: \"2%\" }}>\r\n                <Card.Header>\r\n                    <h1 style={{ marginTop: \"0.5%\" }}>Profile info</h1>\r\n                    <p>Username: {user.username}</p>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div>\r\n                        <p>Avatar preview: <Image src={url} alt=\"No avatar\" className=\"avatar\"></Image></p>\r\n                    </div>\r\n                    <p>Created books: {createdLength}</p>\r\n                    <p>Liked books: {likedLength}</p>\r\n                    <p>Favourite books: {favouritesLength}</p>\r\n                    <Button variant=\"danger\" onClick={handleBtnClick}>Remove profile</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Set Avatar</Form.Label>\r\n                    <Form.Control type=\"file\" onChange={e => setFile(e.target.files[0])}></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" style={{ marginTop: \"5%\" }}>Upload new avatar</Button>\r\n            </Form>\r\n            <Modal show={isLoadingAvatar}>\r\n                <Modal.Body>Avatar is loading...</Modal.Body>\r\n            </Modal>\r\n        </>\r\n        : <p>Loading your info...</p>\r\n}\r\n\r\nfunction isFileImage(file) {\r\n    return file && file['type'].split('/')[0] === 'image';\r\n}\r\n\r\nexport default isAuth(ProfileInfo)"],"sourceRoot":""}